{"ast":null,"code":"import { publishTask } from \"@/api/task\";\nimport { reactive } from \"vue\";\nconst task_form = reactive({\n  taskName: '',\n  taskIntroduction: '',\n  taskStartTime: '',\n  taskEndTime: '',\n  workerNumTotal: 1,\n  taskType: '',\n  executableFileList: [],\n  requirementDescriptionFileList: []\n});\nconst rules = reactive({\n  taskName: [{\n    required: true,\n    message: '请输入任务名称',\n    trigger: 'blur'\n  }, {\n    min: 3,\n    max: 8,\n    message: '任务名称不少于3个字符，不多于8个字符',\n    trigger: 'blur'\n  }],\n  taskIntroduction: [{\n    required: true,\n    message: '请输入任务简介',\n    trigger: 'blur'\n  }, {\n    min: 5,\n    max: 40,\n    massage: '任务简介不少于5个字符，不多于40个字符',\n    trigger: 'blur'\n  }],\n  taskStartTime: [{\n    type: 'date',\n    required: true,\n    message: '请选择任务开始时间，注意不要早于当前时间',\n    trigger: 'change'\n  }],\n  taskEndTime: [{\n    type: 'date',\n    required: true,\n    message: '请选择任务结束时间',\n    trigger: 'change'\n  }],\n  taskType: [{\n    required: true,\n    message: '请选择测试类型',\n    trigger: 'change'\n  }]\n}); // const handleUploadSuccess1 = (response,file) => {\n//\n//   let fileUrl = response.data.url;\n//   let fileName = file.name\n//   task_form.executableFileList.push({fileName:fileName,fileURL:fileUrl})\n// }\n\nconst handleUploadSuccess2 = (response, file) => {\n  let fileUrl = response.data.url;\n  let fileName = file.name;\n  task_form.requirementDescriptionFileList.push({\n    fileName: fileName,\n    fileURL: fileUrl\n  });\n};\n\nexport default {\n  name: \"TaskRelease\",\n\n  data() {\n    return {\n      task_form,\n      rules,\n      taskTypes: [{\n        value: '0',\n        label: '功能测试'\n      }, {\n        value: '1',\n        label: '性能测试'\n      }],\n      userToken: window.localStorage.getItem(\"userToken\")\n    };\n  },\n\n  components: {},\n  methods: {\n    handleUploadSuccess2,\n\n    handleSubmit() {\n      window.localStorage.setItem(\"userToken\", \"testToken\");\n      const task = {\n        \"requirementDescriptionFileList\": this.task_form.requirementDescriptionFileList,\n        \"executableFileList\": this.task_form.executableFileList,\n        \"taskIntroduction\": this.task_form.taskIntroduction,\n        \"taskStartTime\": this.task_form.taskStartTime,\n        \"taskEndTime\": this.task_form.taskEndTime,\n        \"taskType\": this.task_form.taskType,\n        \"taskName\": this.task_form.taskName\n      };\n      publishTask({\n        token: this.userToken,\n        task: task\n      }).then(res => {\n        if (res.code === 1) {\n          console.log(res.msg);\n          console.log(res.data);\n          this.$router.push(\"/taskEnrollSucceed\");\n        } else {\n          console.log(res.msg);\n        }\n      });\n    },\n\n    goBack() {\n      this.$router.back(-1);\n    },\n\n    async fnUploadRequest() {// await oss.ossUploadFile(option)\n    },\n\n    getFileUrl(fileList) {\n      var urls = window.url.res.requestUrls;\n      console.log('文件数量', urls.length);\n      var fileUrl = this.url[0].split('?')[0];\n      console.log('url: ', fileUrl);\n      fileList[fileUrl] = fileUrl;\n      this.$message({\n        type: 'success',\n        message: '上传成功'\n      });\n    },\n\n    handleUploadSuccess1() {\n      this.getFileUrl(task_form.executableFileList);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["publishTask","reactive","task_form","taskName","taskIntroduction","taskStartTime","taskEndTime","workerNumTotal","taskType","executableFileList","requirementDescriptionFileList","rules","required","message","trigger","min","max","massage","type","handleUploadSuccess2","response","file","fileUrl","data","url","fileName","name","push","fileURL","taskTypes","value","label","userToken","window","localStorage","getItem","components","methods","handleSubmit","setItem","task","token","then","res","code","console","log","msg","$router","goBack","back","fnUploadRequest","getFileUrl","fileList","urls","requestUrls","length","split","$message","handleUploadSuccess1"],"sourceRoot":"","sources":["D:\\download\\大三\\大三下\\1 软工三\\project\\第一阶段\\frontend\\frontend-volatile\\src\\views\\task\\TaskRelease.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n  <el-card class=\"box_card\">\r\n    <template #header>\r\n      <div class=\"card_header\">\r\n        <span style=\"font-weight: bolder\">任务信息提交</span>\r\n      </div>\r\n    </template>\r\n    <div class=\"input_container\">\r\n      <el-form :model=\"task_form\" label-width=\"120px\" label-position=\"right\" :rules=\"rules\" >\r\n        <el-form-item label=\"任务名称\" prop=\"taskName\">\r\n          <el-input v-model=\"task_form.taskName\" ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"任务简介\" prop=\"taskIntroduction\">\r\n          <el-input v-model=\"task_form.taskIntroduction\" :rows=\"3\" type=\"textarea\" ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"测试时间段\" required>\r\n          <el-col :span=\"11\">\r\n            <el-form-item prop=\"taskStartTime\">\r\n              <el-date-picker\r\n                v-model=\"task_form.taskStartTime\"\r\n                type=\"date\"\r\n                style=\"width:100%\">\r\n              </el-date-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"2\" style=\"display: flex;text-align: center;justify-content: center\">\r\n            <span >-</span>\r\n          </el-col>\r\n          <el-col :span=\"11\">\r\n            <el-form-item prop=\"taskEndTime\">\r\n              <el-date-picker\r\n                v-model=\"task_form.taskEndTime\"\r\n                type=\"date\"\r\n                style=\"width: 100%\">\r\n              </el-date-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item style=\"margin-left: -120px\">\r\n          <el-col :span=\"11\">\r\n            <el-form-item label=\"工人数量\"  required>\r\n              <el-input-number v-model=\"task_form.workerNumTotal\" :min=\"1\" :max=\"20\" :step=\"1\" style=\"width: 200px\" />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"11\">\r\n            <el-form-item label=\"测试类型\" required prop=\"taskType\">\r\n              <el-select v-model=\"task_form.taskType\" >\r\n                <el-option\r\n                  v-for=\"item in taskTypes\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"附件\"  >\r\n          <div style=\"display: flex;flex-direction: column\">\r\n            <el-upload\r\n              action=\"\"\r\n              show-file-list\r\n              accept=\".exe,.apk,.jar\"\r\n              :limit=\"1\"\r\n              :auto-upload=\"true\"\r\n              :http-request=\"fnUploadRequest\"\r\n              :on-success=\"handleUploadSuccess1\"\r\n              >\r\n              <el-button type=\"primary\" plain>点击上传待测应用可执行文件</el-button>\r\n              <template #tip>\r\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\r\n                请上传.exe,.apk,.jar类型的文件\r\n                </div>\r\n              </template>\r\n            </el-upload>\r\n            <el-upload\r\n                action=\"\"\r\n                :limit=\"1\"\r\n                show-file-list\r\n                accept=\".md,.doc,.pdf,.docx\"\r\n                :on-success=\"handleUploadSuccess2\"\r\n                >\r\n              <el-button type=\"primary\" plain >点击上传测试需求描述文件</el-button>\r\n              <template #tip>\r\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\r\n                  请上传.doc,.md,.pdf,.docx类型的文件\r\n                </div>\r\n              </template>\r\n            </el-upload>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item style=\"margin-left: 340px\">\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">提交任务</el-button>\r\n          <el-button @click=\"goBack\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script >\r\nimport {publishTask} from \"@/api/task\";\r\nimport {reactive} from \"vue\";\r\nconst task_form = reactive({\r\n  taskName: '',\r\n  taskIntroduction: '',\r\n  taskStartTime: '',\r\n  taskEndTime: '',\r\n  workerNumTotal: 1,\r\n  taskType: '',\r\n  executableFileList:[],\r\n  requirementDescriptionFileList:[]\r\n})\r\nconst rules = reactive({\r\n  taskName: [\r\n    {\r\n      required: true,\r\n      message: '请输入任务名称',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min: 3,\r\n      max: 8,\r\n      message: '任务名称不少于3个字符，不多于8个字符',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  taskIntroduction:[\r\n    {\r\n      required: true,\r\n      message: '请输入任务简介',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min: 5,\r\n      max: 40,\r\n      massage: '任务简介不少于5个字符，不多于40个字符',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  taskStartTime:[\r\n    {\r\n      type: 'date',\r\n      required: true,\r\n      message: '请选择任务开始时间，注意不要早于当前时间',\r\n      trigger: 'change'\r\n    }\r\n  ],\r\n  taskEndTime:[\r\n    {\r\n      type: 'date',\r\n      required: true,\r\n      message: '请选择任务结束时间',\r\n      trigger: 'change'\r\n    }\r\n  ],\r\n  taskType: [\r\n    {\r\n      required: true,\r\n      message: '请选择测试类型',\r\n      trigger: 'change'\r\n    }\r\n  ]\r\n})\r\n\r\n// const handleUploadSuccess1 = (response,file) => {\r\n//\r\n//   let fileUrl = response.data.url;\r\n//   let fileName = file.name\r\n//   task_form.executableFileList.push({fileName:fileName,fileURL:fileUrl})\r\n// }\r\n\r\nconst handleUploadSuccess2 = (response,file) => {\r\n  let fileUrl = response.data.url;\r\n  let fileName = file.name\r\n  task_form.requirementDescriptionFileList.push({fileName:fileName,fileURL:fileUrl})\r\n}\r\n\r\nexport default {\r\n  name: \"TaskRelease\",\r\n  data() {\r\n    return {\r\n      task_form,\r\n      rules,\r\n      taskTypes:[\r\n        {\r\n          value:'0',\r\n          label: '功能测试'\r\n        },\r\n        {\r\n          value: '1',\r\n          label: '性能测试',\r\n        }\r\n      ],\r\n      userToken:  window.localStorage.getItem(\"userToken\"),\r\n    }\r\n  },\r\n  components:{\r\n\r\n  },\r\n  methods: {\r\n    handleUploadSuccess2,\r\n    handleSubmit()\r\n    {\r\n      window.localStorage.setItem(\"userToken\",\"testToken\")\r\n      const task = {\r\n          \"requirementDescriptionFileList\": this.task_form.requirementDescriptionFileList,\r\n          \"executableFileList\": this.task_form.executableFileList,\r\n          \"taskIntroduction\":this.task_form.taskIntroduction,\r\n          \"taskStartTime\":this.task_form.taskStartTime,\r\n          \"taskEndTime\":this.task_form.taskEndTime,\r\n          \"taskType\":this.task_form.taskType,\r\n          \"taskName\":this.task_form.taskName,\r\n        }\r\n      publishTask({token:this.userToken,task:task})\r\n      .then(res =>{\r\n        if(res.code === 1) {\r\n          console.log(res.msg)\r\n          console.log(res.data)\r\n          this.$router.push(\"/taskEnrollSucceed\")\r\n        }\r\n        else {console.log(res.msg)}\r\n      })\r\n    },\r\n    goBack(){\r\n      this.$router.back(-1)\r\n    },\r\n    async fnUploadRequest() {\r\n      // await oss.ossUploadFile(option)\r\n    },\r\n    getFileUrl(fileList) {\r\n      var urls = window.url.res.requestUrls;\r\n      console.log('文件数量',urls.length);\r\n      var fileUrl = this.url[0].split('?')[0]\r\n      console.log('url: ',fileUrl)\r\n      fileList[fileUrl] = fileUrl\r\n      this.$message({\r\n        type:'success',\r\n        message:'上传成功'\r\n      })\r\n    },\r\n    handleUploadSuccess1(){\r\n      this.getFileUrl(task_form.executableFileList);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.container{\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n}\r\n.box_card{\r\n  width: 80%;\r\n  margin-top: 20px;\r\n}\r\n.card_header{\r\n  text-align: left;\r\n}\r\n.input_container{\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}