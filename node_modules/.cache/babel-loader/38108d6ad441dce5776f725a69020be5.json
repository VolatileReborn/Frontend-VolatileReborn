{"ast":null,"code":"/**\r\n * 时间日期格式化\r\n * @param dateObj\r\n * @param format\r\n * @returns {*}\r\n */\nexport const dateFormat = function (dateObj, format) {\n  const date = {\n    'M+': dateObj.getMonth() + 1,\n    \"d+\": dateObj.getDate(),\n    \"h+\": dateObj.getHours(),\n    \"m+\": dateObj.getMinutes(),\n    \"s+\": dateObj.getSeconds(),\n    \"q+\": Math.floor((dateObj.getMonth() + 3) / 3),\n    \"S+\": dateObj.getMilliseconds()\n  };\n\n  if (/(y+)/i.test(format)) {\n    format = format.replace(RegExp.$1, (dateObj.getFullYear() + '').substr(4 - RegExp.$1.length));\n  }\n\n  for (const k in date) {\n    if (new RegExp('(' + k + ')').test(format)) {\n      format = format.replace(RegExp.$1, RegExp.$1.length === 1 ? date[k] : ('00' + date[k]).substr(('' + date[k]).length));\n    }\n  }\n\n  return format;\n};","map":{"version":3,"sources":["D:/latest/frontend-volatile/src/utils/utils.js"],"names":["dateFormat","dateObj","format","date","getMonth","getDate","getHours","getMinutes","getSeconds","Math","floor","getMilliseconds","test","replace","RegExp","$1","getFullYear","substr","length","k"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,UAAU,GAAG,UAAUC,OAAV,EAAkBC,MAAlB,EAA0B;AAChD,QAAMC,IAAI,GAAG;AACT,UAAOF,OAAO,CAACG,QAAR,KAAqB,CADnB;AAET,UAAOH,OAAO,CAACI,OAAR,EAFE;AAGT,UAAOJ,OAAO,CAACK,QAAR,EAHE;AAIT,UAAOL,OAAO,CAACM,UAAR,EAJE;AAKT,UAAON,OAAO,CAACO,UAAR,EALE;AAMT,UAAOC,IAAI,CAACC,KAAL,CAAW,CAACT,OAAO,CAACG,QAAR,KAAqB,CAAtB,IAA2B,CAAtC,CANE;AAOT,UAAOH,OAAO,CAACU,eAAR;AAPE,GAAb;;AASA,MAAG,QAAQC,IAAR,CAAaV,MAAb,CAAH,EAAwB;AACpBA,IAAAA,MAAM,GAAGA,MAAM,CAACW,OAAP,CACLC,MAAM,CAACC,EADF,EAEL,CAACd,OAAO,CAACe,WAAR,KAAwB,EAAzB,EAA6BC,MAA7B,CAAoC,IAAIH,MAAM,CAACC,EAAP,CAAUG,MAAlD,CAFK,CAAT;AAIH;;AACD,OAAI,MAAMC,CAAV,IAAehB,IAAf,EAAqB;AACjB,QAAG,IAAIW,MAAJ,CAAW,MAAMK,CAAN,GAAU,GAArB,EAA0BP,IAA1B,CAA+BV,MAA/B,CAAH,EAA0C;AACtCA,MAAAA,MAAM,GAAGA,MAAM,CAACW,OAAP,CACLC,MAAM,CAACC,EADF,EAELD,MAAM,CAACC,EAAP,CAAUG,MAAV,KAAqB,CAArB,GACMf,IAAI,CAACgB,CAAD,CADV,GAEM,CAAC,OAAOhB,IAAI,CAACgB,CAAD,CAAZ,EAAiBF,MAAjB,CAAwB,CAAC,KAAKd,IAAI,CAACgB,CAAD,CAAV,EAAeD,MAAvC,CAJD,CAAT;AAMH;AACJ;;AACD,SAAOhB,MAAP;AACH,CA3BM","sourcesContent":["/**\r\n * 时间日期格式化\r\n * @param dateObj\r\n * @param format\r\n * @returns {*}\r\n */\r\nexport const dateFormat = function (dateObj,format) {\r\n    const date = {\r\n        'M+' : dateObj.getMonth() + 1,\r\n        \"d+\" : dateObj.getDate(),\r\n        \"h+\" : dateObj.getHours(),\r\n        \"m+\" : dateObj.getMinutes(),\r\n        \"s+\" : dateObj.getSeconds(),\r\n        \"q+\" : Math.floor((dateObj.getMonth() + 3) / 3),\r\n        \"S+\" : dateObj.getMilliseconds()\r\n    }\r\n    if(/(y+)/i.test(format)){\r\n        format = format.replace(\r\n            RegExp.$1,\r\n            (dateObj.getFullYear() + '').substr(4 - RegExp.$1.length)\r\n        )\r\n    }\r\n    for(const k in date) {\r\n        if(new RegExp('(' + k + ')').test(format)){\r\n            format = format.replace(\r\n                RegExp.$1,\r\n                RegExp.$1.length === 1\r\n                    ? date[k]\r\n                    : ('00' + date[k]).substr(('' + date[k]).length)\r\n            )\r\n        }\r\n    }\r\n    return format\r\n}"]},"metadata":{},"sourceType":"module"}