{"ast":null,"code":"import { SQUARE_MODULE } from \"@/api/_prefix\";\nimport axios from \"axios\";\n/**\r\n * 浏览任务广场 GET /square/browserTasks\r\n * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\n\nexport const browserTasks = () => {\n  // return axios.get(`${SQUARE_MODULE}/browserTasks`)\n  //     .then(res => {\n  //         return res.data\n  //     })\n  return Promise.resolve({\n    \"code\": 1,\n    \"msg\": \"获取数据成功\",\n    \"data\": {\n      \"taskList\": [{\n        taskId: 0,\n        taskName: 'test_task',\n        taskType: 0,\n        workerNumTotal: 10,\n        workerNumLeft: 5,\n        taskStartTime: '2022-3-1',\n        taskEndTime: '2022-5-3'\n      }, {\n        taskId: 1,\n        taskName: 'test_task333',\n        taskType: 1,\n        workerNumTotal: 20,\n        workerNumLeft: 6,\n        taskStartTime: '2022-3-1',\n        taskEndTime: '2022-5-3'\n      }, {\n        taskId: 2,\n        taskName: 'test_task5',\n        taskType: 0,\n        workerNumTotal: 20,\n        workerNumLeft: 6,\n        taskStartTime: '2022-3-1',\n        taskEndTime: '2022-5-3'\n      }, {\n        taskId: 3,\n        taskName: 'test_task363',\n        taskType: 1,\n        workerNumTotal: 20,\n        workerNumLeft: 6,\n        taskStartTime: '2022-3-1',\n        taskEndTime: '2022-5-3'\n      }]\n    }\n  });\n};\n/**\r\n * 接包方浏览大厅中的具体任务 GET /square/employeeTaskDetail\r\n * 报告发布页也使用了该接口\r\n * @param payload\r\n * @returns {Promise<{code: number, data: {task: {workerNumLeft: number, taskType: number, taskState: boolean, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string, taskIntroduction: string}, isSelected: boolean}, message: string}>}\r\n */\n\nexport const employeeTaskDetail = payload => {\n  const {\n    token,\n    taskId\n  } = payload;\n  return axios.get(`${SQUARE_MODULE}/employeeTaskDetail/${taskId}?token=${token}`).then(res => {\n    return res.data;\n  }); // return Promise.resolve({\n  //     \"code\":1,\n  //     \"message\":\"接包方浏览任务\",\n  //     \"data\":{\n  //         \"task\":{\n  //             taskId: 0,\n  //             taskName: 'test_task',\n  //             taskType: 0,\n  //             workerNumTotal: 10,\n  //             workerNumLeft: 5,\n  //             taskStartTime: '2022-3-1',\n  //             taskEndTime: '2022-5-3',\n  //             taskState: true,\n  //             taskIntroduction: '这是一个测试任务',\n  //         },\n  //         \"isSelected\":false,\n  //         \"token\":token,\n  //         \"taskId\":taskId\n  //     }\n  // })\n};\n/**\r\n * 发包方浏览大厅中的具体任务 GET /square/employerTaskDetail\r\n * @param payload\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\n\nexport const employerTaskDetail = payload => {\n  const {\n    token,\n    taskId\n  } = payload;\n  return axios.get(`${SQUARE_MODULE}/employerTaskDetail/${taskId}?token=${token}`).then(res => {\n    return res.data;\n  }); // return Promise.resolve({\n  //     \"code\":1,\n  //     \"msg\":\"发包方浏览任务\",\n  //     \"data\":{\n  //         \"token\":token,\n  //         \"task\":{\n  //             taskId: taskId,\n  //             taskName: 'test_task',\n  //             taskType: 0,\n  //             workerNumTotal: 10,\n  //             workerNumLeft: 5,\n  //             taskStartTime: '2022-3-1',\n  //             taskEndTime: '2022-5-3',\n  //             taskState: true,\n  //             taskIntroduction: '这是一个测试任务',\n  //         }\n  //     }\n  // })\n};","map":{"version":3,"sources":["D:/download/大三/大三下/1 软工三/project/第一阶段/frontend/frontend-volatile/src/api/square.js"],"names":["SQUARE_MODULE","axios","browserTasks","Promise","resolve","taskId","taskName","taskType","workerNumTotal","workerNumLeft","taskStartTime","taskEndTime","employeeTaskDetail","payload","token","get","then","res","data","employerTaskDetail"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B;AACA;AACA;AACA;AACA,SAAOC,OAAO,CAACC,OAAR,CAAgB;AACnB,YAAO,CADY;AAEnB,WAAM,QAFa;AAGnB,YAAO;AACH,kBAAW,CACP;AAACC,QAAAA,MAAM,EAAE,CAAT;AAAWC,QAAAA,QAAQ,EAAE,WAArB;AAAiCC,QAAAA,QAAQ,EAAE,CAA3C;AAA6CC,QAAAA,cAAc,EAAE,EAA7D;AAAgEC,QAAAA,aAAa,EAAE,CAA/E;AAAiFC,QAAAA,aAAa,EAAE,UAAhG;AAA2GC,QAAAA,WAAW,EAAE;AAAxH,OADO,EAEP;AAACN,QAAAA,MAAM,EAAE,CAAT;AAAWC,QAAAA,QAAQ,EAAE,cAArB;AAAoCC,QAAAA,QAAQ,EAAE,CAA9C;AAAgDC,QAAAA,cAAc,EAAE,EAAhE;AAAmEC,QAAAA,aAAa,EAAE,CAAlF;AAAoFC,QAAAA,aAAa,EAAE,UAAnG;AAA8GC,QAAAA,WAAW,EAAE;AAA3H,OAFO,EAGP;AAACN,QAAAA,MAAM,EAAE,CAAT;AAAWC,QAAAA,QAAQ,EAAE,YAArB;AAAkCC,QAAAA,QAAQ,EAAE,CAA5C;AAA8CC,QAAAA,cAAc,EAAE,EAA9D;AAAiEC,QAAAA,aAAa,EAAE,CAAhF;AAAkFC,QAAAA,aAAa,EAAE,UAAjG;AAA4GC,QAAAA,WAAW,EAAE;AAAzH,OAHO,EAIP;AAACN,QAAAA,MAAM,EAAE,CAAT;AAAWC,QAAAA,QAAQ,EAAE,cAArB;AAAoCC,QAAAA,QAAQ,EAAE,CAA9C;AAAgDC,QAAAA,cAAc,EAAE,EAAhE;AAAmEC,QAAAA,aAAa,EAAE,CAAlF;AAAoFC,QAAAA,aAAa,EAAE,UAAnG;AAA8GC,QAAAA,WAAW,EAAE;AAA3H,OAJO;AADR;AAHY,GAAhB,CAAP;AAaH,CAlBM;AAmBP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAGC,OAAO,IAAG;AACxC,QAAM;AAACC,IAAAA,KAAD;AAAOT,IAAAA;AAAP,MAAiBQ,OAAvB;AACA,SAAOZ,KAAK,CAACc,GAAN,CAAW,GAAEf,aAAc,uBAAsBK,MAAO,UAASS,KAAM,EAAvE,EACFE,IADE,CACGC,GAAG,IAAG;AACR,WAAOA,GAAG,CAACC,IAAX;AACH,GAHE,CAAP,CAFwC,CAMxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CA1BM;AA4BP;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,kBAAkB,GAAGN,OAAO,IAAI;AACzC,QAAM;AAACC,IAAAA,KAAD;AAAOT,IAAAA;AAAP,MAAiBQ,OAAvB;AACA,SAAOZ,KAAK,CAACc,GAAN,CAAW,GAAEf,aAAc,uBAAsBK,MAAO,UAASS,KAAM,EAAvE,EACFE,IADE,CACGC,GAAG,IAAI;AACT,WAAOA,GAAG,CAACC,IAAX;AACH,GAHE,CAAP,CAFyC,CAMzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CAzBM","sourcesContent":["import {SQUARE_MODULE} from \"@/api/_prefix\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * 浏览任务广场 GET /square/browserTasks\r\n * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\r\nexport const browserTasks = () => {\r\n    // return axios.get(`${SQUARE_MODULE}/browserTasks`)\r\n    //     .then(res => {\r\n    //         return res.data\r\n    //     })\r\n    return Promise.resolve({\r\n        \"code\":1,\r\n        \"msg\":\"获取数据成功\",\r\n        \"data\":{\r\n            \"taskList\":[\r\n                {taskId: 0,taskName: 'test_task',taskType: 0,workerNumTotal: 10,workerNumLeft: 5,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\r\n                {taskId: 1,taskName: 'test_task333',taskType: 1,workerNumTotal: 20,workerNumLeft: 6,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\r\n                {taskId: 2,taskName: 'test_task5',taskType: 0,workerNumTotal: 20,workerNumLeft: 6,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\r\n                {taskId: 3,taskName: 'test_task363',taskType: 1,workerNumTotal: 20,workerNumLeft: 6,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\r\n            ]\r\n        }\r\n    })\r\n\r\n}\r\n/**\r\n * 接包方浏览大厅中的具体任务 GET /square/employeeTaskDetail\r\n * 报告发布页也使用了该接口\r\n * @param payload\r\n * @returns {Promise<{code: number, data: {task: {workerNumLeft: number, taskType: number, taskState: boolean, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string, taskIntroduction: string}, isSelected: boolean}, message: string}>}\r\n */\r\nexport const employeeTaskDetail = payload =>{\r\n    const {token,taskId} = payload ;\r\n    return axios.get(`${SQUARE_MODULE}/employeeTaskDetail/${taskId}?token=${token}`)\r\n        .then(res =>{\r\n            return res.data\r\n        })\r\n    // return Promise.resolve({\r\n    //     \"code\":1,\r\n    //     \"message\":\"接包方浏览任务\",\r\n    //     \"data\":{\r\n    //         \"task\":{\r\n    //             taskId: 0,\r\n    //             taskName: 'test_task',\r\n    //             taskType: 0,\r\n    //             workerNumTotal: 10,\r\n    //             workerNumLeft: 5,\r\n    //             taskStartTime: '2022-3-1',\r\n    //             taskEndTime: '2022-5-3',\r\n    //             taskState: true,\r\n    //             taskIntroduction: '这是一个测试任务',\r\n    //         },\r\n    //         \"isSelected\":false,\r\n    //         \"token\":token,\r\n    //         \"taskId\":taskId\r\n    //     }\r\n    // })\r\n}\r\n\r\n/**\r\n * 发包方浏览大厅中的具体任务 GET /square/employerTaskDetail\r\n * @param payload\r\n * @returns {Promise<AxiosResponse<any>>}\r\n */\r\nexport const employerTaskDetail = payload => {\r\n    const {token,taskId} = payload;\r\n    return axios.get(`${SQUARE_MODULE}/employerTaskDetail/${taskId}?token=${token}`)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n    // return Promise.resolve({\r\n    //     \"code\":1,\r\n    //     \"msg\":\"发包方浏览任务\",\r\n    //     \"data\":{\r\n    //         \"token\":token,\r\n    //         \"task\":{\r\n    //             taskId: taskId,\r\n    //             taskName: 'test_task',\r\n    //             taskType: 0,\r\n    //             workerNumTotal: 10,\r\n    //             workerNumLeft: 5,\r\n    //             taskStartTime: '2022-3-1',\r\n    //             taskEndTime: '2022-5-3',\r\n    //             taskState: true,\r\n    //             taskIntroduction: '这是一个测试任务',\r\n    //         }\r\n    //     }\r\n    // })\r\n\r\n}"]},"metadata":{},"sourceType":"module"}