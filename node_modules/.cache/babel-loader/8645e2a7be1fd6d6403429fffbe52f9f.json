{"ast":null,"code":"import { publishTask } from \"@/api/task\";\nimport { reactive } from \"vue\";\nimport oss from \"@/utils/oss\";\nconst task_form = reactive({\n  taskName: '',\n  taskIntroduction: '',\n  taskStartTime: '',\n  taskEndTime: '',\n  workerNumTotal: 1,\n  taskType: '',\n  executableFileList: [],\n  requirementDescriptionFileList: []\n});\nconst rules = reactive({\n  taskName: [{\n    required: true,\n    message: '请输入任务名称',\n    trigger: 'blur'\n  }, {\n    min: 3,\n    max: 8,\n    message: '任务名称不少于3个字符，不多于8个字符',\n    trigger: 'blur'\n  }],\n  taskIntroduction: [{\n    required: true,\n    message: '请输入任务简介',\n    trigger: 'blur'\n  }, {\n    min: 5,\n    max: 40,\n    massage: '任务简介不少于5个字符，不多于40个字符',\n    trigger: 'blur'\n  }],\n  taskStartTime: [{\n    type: 'date',\n    required: true,\n    message: '请选择任务开始时间，注意不要早于当前时间',\n    trigger: 'change'\n  }],\n  taskEndTime: [{\n    type: 'date',\n    required: true,\n    message: '请选择任务结束时间',\n    trigger: 'change'\n  }],\n  taskType: [{\n    required: true,\n    message: '请选择测试类型',\n    trigger: 'change'\n  }]\n});\nexport default {\n  name: \"TaskRelease\",\n\n  data() {\n    return {\n      task_form,\n      rules,\n      taskTypes: [{\n        value: '0',\n        label: '功能测试'\n      }, {\n        value: '1',\n        label: '性能测试'\n      }],\n      token: window.localStorage.getItem(\"token\"),\n      file: {\n        fileName: '',\n        fileURL: ''\n      }\n    };\n  },\n\n  components: {},\n  methods: {\n    handleSubmit() {\n      const task = {\n        \"requirementDescriptionFileList\": this.task_form.requirementDescriptionFileList,\n        \"executableFileList\": this.task_form.executableFileList,\n        \"taskIntroduction\": this.task_form.taskIntroduction,\n        \"taskStartTime\": this.task_form.taskStartTime,\n        \"taskEndTime\": this.task_form.taskEndTime,\n        \"taskType\": this.task_form.taskType,\n        \"taskName\": this.task_form.taskName\n      };\n      publishTask({\n        token: this.token,\n        task: task\n      }).then(res => {\n        if (res.response.code === 0) {\n          console.log(res.response.msg);\n          this.$router.push(\"/taskEnrollSucceed\");\n        } else {\n          console.log(res.response.msg);\n        }\n      });\n    },\n\n    goBack() {\n      this.$router.back(-1);\n    },\n\n    async fnUploadRequest(option) {\n      await oss.ossUploadFile(option).then(res => {\n        this.file.fileName = res.fileName;\n        this.file.fileURL = res.fileUrl;\n      });\n    },\n\n    handleUploadSuccess1() {\n      task_form.executableFileList.push(this.file);\n      console.log(\"executableFileList:\");\n      console.log(this.file);\n    },\n\n    handleUploadSuccess2() {\n      task_form.requirementDescriptionFileList.push(this.file);\n      console.log(\"requirementDescriptionFileList\");\n      console.log(this.file);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["publishTask","reactive","oss","task_form","taskName","taskIntroduction","taskStartTime","taskEndTime","workerNumTotal","taskType","executableFileList","requirementDescriptionFileList","rules","required","message","trigger","min","max","massage","type","name","data","taskTypes","value","label","token","window","localStorage","getItem","file","fileName","fileURL","components","methods","handleSubmit","task","then","res","response","code","console","log","msg","$router","push","goBack","back","fnUploadRequest","option","ossUploadFile","fileUrl","handleUploadSuccess1","handleUploadSuccess2"],"sourceRoot":"","sources":["/home/lyk/Projects/Volatile/frontend-volatile/src/views/task/TaskRelease.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  <el-card class=\"box_card\">\n    <template #header>\n      <div class=\"card_header\">\n        <span style=\"font-weight: bolder\">任务信息提交</span>\n      </div>\n    </template>\n    <div class=\"input_container\">\n      <el-form :model=\"task_form\" label-width=\"120px\" label-position=\"right\" :rules=\"rules\" >\n        <el-form-item label=\"任务名称\" prop=\"taskName\">\n          <el-input v-model=\"task_form.taskName\" ></el-input>\n        </el-form-item>\n        <el-form-item label=\"任务简介\" prop=\"taskIntroduction\">\n          <el-input v-model=\"task_form.taskIntroduction\" :rows=\"3\" type=\"textarea\" ></el-input>\n        </el-form-item>\n        <el-form-item label=\"测试时间段\" required>\n          <el-col :span=\"11\">\n            <el-form-item prop=\"taskStartTime\">\n              <el-date-picker\n                v-model=\"task_form.taskStartTime\"\n                type=\"date\"\n                style=\"width:100%\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"2\" style=\"display: flex;text-align: center;justify-content: center\">\n            <span >-</span>\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item prop=\"taskEndTime\">\n              <el-date-picker\n                v-model=\"task_form.taskEndTime\"\n                type=\"date\"\n                style=\"width: 100%\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n        </el-form-item>\n        <el-form-item style=\"margin-left: -120px\">\n          <el-col :span=\"11\">\n            <el-form-item label=\"工人数量\"  required>\n              <el-input-number v-model=\"task_form.workerNumTotal\" :min=\"1\" :max=\"20\" :step=\"1\" style=\"width: 200px\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item label=\"测试类型\" required prop=\"taskType\">\n              <el-select v-model=\"task_form.taskType\" >\n                <el-option\n                  v-for=\"item in taskTypes\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-form-item>\n        <el-form-item label=\"附件\"  >\n          <div style=\"display: flex;flex-direction: column\">\n            <el-upload\n              action=\"\"\n              show-file-list\n              accept=\".exe,.apk,.jar\"\n              :limit=\"1\"\n              :auto-upload=\"true\"\n              :http-request=\"fnUploadRequest\"\n              :on-success=\"handleUploadSuccess1\"\n              >\n              <el-button type=\"primary\" plain>点击上传待测应用可执行文件</el-button>\n              <template #tip>\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\n                请上传.exe,.apk,.jar类型的文件\n                </div>\n              </template>\n            </el-upload>\n            <el-upload\n                action=\"\"\n                :limit=\"1\"\n                show-file-list\n                :auto-upload=\"true\"\n                :http-request=\"fnUploadRequest\"\n                accept=\".md,.doc,.pdf,.docx\"\n                :on-success=\"handleUploadSuccess2\"\n                >\n              <el-button type=\"primary\" plain >点击上传测试需求描述文件</el-button>\n              <template #tip>\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\n                  请上传.doc,.md,.pdf,.docx类型的文件\n                </div>\n              </template>\n            </el-upload>\n          </div>\n        </el-form-item>\n        <el-form-item style=\"margin-left: 340px\">\n          <el-button type=\"primary\" @click=\"handleSubmit\">提交任务</el-button>\n          <el-button @click=\"goBack\">取消</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </el-card>\n  </div>\n</template>\n\n<script >\nimport {publishTask} from \"@/api/task\";\nimport {reactive} from \"vue\";\nimport oss from \"@/utils/oss\"\n\nconst task_form = reactive({\n  taskName: '',\n  taskIntroduction: '',\n  taskStartTime: '',\n  taskEndTime: '',\n  workerNumTotal: 1,\n  taskType: '',\n  executableFileList:[],\n  requirementDescriptionFileList:[]\n})\nconst rules = reactive({\n  taskName: [\n    {\n      required: true,\n      message: '请输入任务名称',\n      trigger: 'blur'\n    },\n    {\n      min: 3,\n      max: 8,\n      message: '任务名称不少于3个字符，不多于8个字符',\n      trigger: 'blur'\n    }\n  ],\n  taskIntroduction:[\n    {\n      required: true,\n      message: '请输入任务简介',\n      trigger: 'blur'\n    },\n    {\n      min: 5,\n      max: 40,\n      massage: '任务简介不少于5个字符，不多于40个字符',\n      trigger: 'blur'\n    }\n  ],\n  taskStartTime:[\n    {\n      type: 'date',\n      required: true,\n      message: '请选择任务开始时间，注意不要早于当前时间',\n      trigger: 'change'\n    }\n  ],\n  taskEndTime:[\n    {\n      type: 'date',\n      required: true,\n      message: '请选择任务结束时间',\n      trigger: 'change'\n    }\n  ],\n  taskType: [\n    {\n      required: true,\n      message: '请选择测试类型',\n      trigger: 'change'\n    }\n  ]\n})\n\nexport default {\n  name: \"TaskRelease\",\n  data() {\n    return {\n      task_form,\n      rules,\n      taskTypes: [\n        {\n          value: '0',\n          label: '功能测试'\n        },\n        {\n          value: '1',\n          label: '性能测试',\n        }\n      ],\n      token: window.localStorage.getItem(\"token\"),\n      file: {\n        fileName: '',\n        fileURL: ''\n      }\n    }\n  },\n  components: {},\n  methods: {\n    handleSubmit() {\n      const task = {\n        \"requirementDescriptionFileList\": this.task_form.requirementDescriptionFileList,\n        \"executableFileList\": this.task_form.executableFileList,\n        \"taskIntroduction\": this.task_form.taskIntroduction,\n        \"taskStartTime\": this.task_form.taskStartTime,\n        \"taskEndTime\": this.task_form.taskEndTime,\n        \"taskType\": this.task_form.taskType,\n        \"taskName\": this.task_form.taskName,\n      }\n      publishTask({token: this.token, task: task})\n          .then(res => {\n            if (res.response.code === 0) {\n              console.log(res.response.msg)\n              this.$router.push(\"/taskEnrollSucceed\")\n            } else {\n              console.log(res.response.msg)\n            }\n          })\n    },\n    goBack() {\n      this.$router.back(-1)\n    },\n    async fnUploadRequest(option) {\n      await oss.ossUploadFile(option).then(res => {\n        this.file.fileName = res.fileName;\n        this.file.fileURL = res.fileUrl;\n      })\n    },\n    handleUploadSuccess1() {\n      task_form.executableFileList.push(this.file)\n      console.log(\"executableFileList:\")\n      console.log(this.file)\n    },\n    handleUploadSuccess2() {\n      task_form.requirementDescriptionFileList.push(this.file)\n      console.log(\"requirementDescriptionFileList\")\n      console.log(this.file)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container{\n  display: flex;\n  text-align: center;\n  justify-content: center;\n}\n.box_card{\n  width: 80%;\n  margin-top: 20px;\n}\n.card_header{\n  text-align: left;\n}\n.input_container{\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n}\n</style>"]},"metadata":{},"sourceType":"module"}