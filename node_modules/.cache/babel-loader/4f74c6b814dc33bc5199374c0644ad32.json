{"ast":null,"code":"import { defineComponent, ref, resolveComponent, openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, createBlock, withCtx, renderSlot, createElementVNode } from 'vue';\nimport { NOOP, hasOwn } from '@vue/shared';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport upload from './ajax.mjs';\nimport UploadDragger from './upload-dragger.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  components: {\n    UploadDragger\n  },\n  props: {\n    type: {\n      type: String,\n      default: \"\"\n    },\n    action: {\n      type: String,\n      required: true\n    },\n    name: {\n      type: String,\n      default: \"file\"\n    },\n    data: {\n      type: Object,\n      default: () => null\n    },\n    headers: {\n      type: Object,\n      default: () => null\n    },\n    method: {\n      type: String,\n      default: \"post\"\n    },\n    withCredentials: {\n      type: Boolean,\n      default: false\n    },\n    multiple: {\n      type: Boolean,\n      default: null\n    },\n    accept: {\n      type: String,\n      default: \"\"\n    },\n    onStart: {\n      type: Function,\n      default: NOOP\n    },\n    onProgress: {\n      type: Function,\n      default: NOOP\n    },\n    onSuccess: {\n      type: Function,\n      default: NOOP\n    },\n    onError: {\n      type: Function,\n      default: NOOP\n    },\n    beforeUpload: {\n      type: Function,\n      default: NOOP\n    },\n    drag: {\n      type: Boolean,\n      default: false\n    },\n    onPreview: {\n      type: Function,\n      default: NOOP\n    },\n    onRemove: {\n      type: Function,\n      default: NOOP\n    },\n    fileList: {\n      type: Array,\n      default: () => []\n    },\n    autoUpload: {\n      type: Boolean,\n      default: true\n    },\n    listType: {\n      type: String,\n      default: \"text\"\n    },\n    httpRequest: {\n      type: Function,\n      default: () => upload\n    },\n    disabled: Boolean,\n    limit: {\n      type: Number,\n      default: null\n    },\n    onExceed: {\n      type: Function,\n      default: NOOP\n    }\n  },\n\n  setup(props) {\n    const reqs = ref({});\n    const ns = useNamespace(\"upload\");\n    const mouseover = ref(false);\n    const inputRef = ref(null);\n\n    function uploadFiles(files) {\n      if (props.limit && props.fileList.length + files.length > props.limit) {\n        props.onExceed(files, props.fileList);\n        return;\n      }\n\n      let postFiles = Array.from(files);\n\n      if (!props.multiple) {\n        postFiles = postFiles.slice(0, 1);\n      }\n\n      if (postFiles.length === 0) {\n        return;\n      }\n\n      postFiles.forEach(rawFile => {\n        props.onStart(rawFile);\n        if (props.autoUpload) upload(rawFile);\n      });\n    }\n\n    function upload(rawFile) {\n      inputRef.value.value = null;\n\n      if (!props.beforeUpload) {\n        return post(rawFile);\n      }\n\n      const before = props.beforeUpload(rawFile);\n\n      if (before instanceof Promise) {\n        before.then(processedFile => {\n          const fileType = Object.prototype.toString.call(processedFile);\n\n          if (fileType === \"[object File]\" || fileType === \"[object Blob]\") {\n            if (fileType === \"[object Blob]\") {\n              processedFile = new File([processedFile], rawFile.name, {\n                type: rawFile.type\n              });\n            }\n\n            for (const p in rawFile) {\n              if (hasOwn(rawFile, p)) {\n                processedFile[p] = rawFile[p];\n              }\n            }\n\n            post(processedFile);\n          } else {\n            post(rawFile);\n          }\n        }).catch(() => {\n          props.onRemove(null, rawFile);\n        });\n      } else if (before !== false) {\n        post(rawFile);\n      } else {\n        props.onRemove(null, rawFile);\n      }\n    }\n\n    function abort(file) {\n      const _reqs = reqs.value;\n\n      if (file) {\n        let uid = file;\n        if (file.uid) uid = file.uid;\n\n        if (_reqs[uid]) {\n          ;\n\n          _reqs[uid].abort();\n        }\n      } else {\n        Object.keys(_reqs).forEach(uid => {\n          if (_reqs[uid]) _reqs[uid].abort();\n          delete _reqs[uid];\n        });\n      }\n    }\n\n    function post(rawFile) {\n      const {\n        uid\n      } = rawFile;\n      const options = {\n        headers: props.headers,\n        withCredentials: props.withCredentials,\n        file: rawFile,\n        data: props.data,\n        method: props.method,\n        filename: props.name,\n        action: props.action,\n        onProgress: e => {\n          props.onProgress(e, rawFile);\n        },\n        onSuccess: res => {\n          props.onSuccess(res, rawFile);\n          delete reqs.value[uid];\n        },\n        onError: err => {\n          props.onError(err, rawFile);\n          delete reqs.value[uid];\n        }\n      };\n      const req = props.httpRequest(options);\n      reqs.value[uid] = req;\n\n      if (req instanceof Promise) {\n        req.then(options.onSuccess, options.onError);\n      }\n    }\n\n    function handleChange(e) {\n      const files = e.target.files;\n      if (!files) return;\n      uploadFiles(files);\n    }\n\n    function handleClick() {\n      if (!props.disabled) {\n        inputRef.value.value = null;\n        inputRef.value.click();\n      }\n    }\n\n    function handleKeydown() {\n      handleClick();\n    }\n\n    return {\n      ns,\n      reqs,\n      mouseover,\n      inputRef,\n      abort,\n      post,\n      handleChange,\n      handleClick,\n      handleKeydown,\n      upload,\n      uploadFiles\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"name\", \"multiple\", \"accept\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_upload_dragger = resolveComponent(\"upload-dragger\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([_ctx.ns.b(), _ctx.ns.m(_ctx.listType)]),\n    tabindex: \"0\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.handleClick && _ctx.handleClick(...args)),\n    onKeydown: _cache[2] || (_cache[2] = withKeys(withModifiers((...args) => _ctx.handleKeydown && _ctx.handleKeydown(...args), [\"self\"]), [\"enter\", \"space\"]))\n  }, [_ctx.drag ? (openBlock(), createBlock(_component_upload_dragger, {\n    key: 0,\n    disabled: _ctx.disabled,\n    onFile: _ctx.uploadFiles\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n    _: 3\n  }, 8, [\"disabled\", \"onFile\"])) : renderSlot(_ctx.$slots, \"default\", {\n    key: 1\n  }), createElementVNode(\"input\", {\n    ref: \"inputRef\",\n    class: normalizeClass(_ctx.ns.e(\"input\")),\n    type: \"file\",\n    name: _ctx.name,\n    multiple: _ctx.multiple,\n    accept: _ctx.accept,\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.handleChange && _ctx.handleChange(...args))\n  }, null, 42, _hoisted_1)], 34);\n}\n\nvar Upload = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Upload as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","components","UploadDragger","props","type","String","default","action","required","name","data","Object","headers","method","withCredentials","Boolean","multiple","accept","onStart","Function","NOOP","onProgress","onSuccess","onError","beforeUpload","drag","onPreview","onRemove","fileList","Array","autoUpload","listType","httpRequest","ajax","disabled","limit","Number","onExceed","setup","reqs","ref","ns","useNamespace","mouseover","inputRef","files","length","postFiles","from","slice","forEach","rawFile","upload","value","post","before","Promise","then","processedFile","fileType","prototype","toString","call","File","p","hasOwn","catch","file","_reqs","uid","abort","keys","options","filename","e","res","err","req","target","uploadFiles","click","handleClick","handleChange","handleKeydown","_createElementBlock","class","_normalizeClass","_ctx","b","m","tabindex","onClick","_cache","onKeydown","_createBlock","_component_upload_dragger","key","onFile","_renderSlot","_","_createElementVNode","onChange","_hoisted_1"],"sources":["../../../../../../packages/components/upload/src/upload.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[ns.b(), ns.m(listType)]\"\n    tabindex=\"0\"\n    @click=\"handleClick\"\n    @keydown.self.enter.space=\"handleKeydown\"\n  >\n    <template v-if=\"drag\">\n      <upload-dragger :disabled=\"disabled\" @file=\"uploadFiles\">\n        <slot></slot>\n      </upload-dragger>\n    </template>\n    <template v-else>\n      <slot></slot>\n    </template>\n    <input\n      ref=\"inputRef\"\n      :class=\"ns.e('input')\"\n      type=\"file\"\n      :name=\"name\"\n      :multiple=\"multiple\"\n      :accept=\"accept\"\n      @change=\"handleChange\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue'\nimport { NOOP } from '@vue/shared'\nimport { hasOwn } from '@element-plus/utils'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport ajax from './ajax'\nimport UploadDragger from './upload-dragger.vue'\n\nimport type { PropType } from 'vue'\nimport type { Nullable } from '@element-plus/utils'\nimport type { ListType, UploadFile, ElFile } from './upload.type'\n\ntype IFileHanlder = (\n  file: Nullable<ElFile[]>,\n  fileList?: UploadFile[]\n) => unknown\n\ntype AjaxEventListener = (e: ProgressEvent, file: ElFile) => unknown\n\nexport default defineComponent({\n  components: {\n    UploadDragger,\n  },\n  props: {\n    type: {\n      type: String,\n      default: '',\n    },\n    action: {\n      type: String,\n      required: true,\n    },\n    name: {\n      type: String,\n      default: 'file',\n    },\n    data: {\n      type: Object as PropType<Record<string, any>>,\n      default: () => null,\n    },\n    headers: {\n      type: Object as PropType<Nullable<Partial<Headers>>>,\n      default: () => null,\n    },\n    method: {\n      type: String,\n      default: 'post',\n    },\n    withCredentials: {\n      type: Boolean,\n      default: false,\n    },\n    multiple: {\n      type: Boolean as PropType<Nullable<boolean>>,\n      default: null,\n    },\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#Unique_file_type_specifiers\n    accept: {\n      type: String,\n      default: '',\n    },\n    onStart: {\n      type: Function as PropType<(file: File) => void>,\n      default: NOOP as (file: File) => void,\n    },\n    onProgress: {\n      type: Function as PropType<AjaxEventListener>,\n      default: NOOP as AjaxEventListener,\n    },\n    onSuccess: {\n      type: Function as PropType<AjaxEventListener>,\n      default: NOOP as AjaxEventListener,\n    },\n    onError: {\n      type: Function as PropType<AjaxEventListener>,\n      default: NOOP as AjaxEventListener,\n    },\n    beforeUpload: {\n      type: Function as PropType<\n        (file: File) => Promise<File | Blob> | boolean | unknown\n      >,\n      default: NOOP as (file: File) => void,\n    },\n    drag: {\n      type: Boolean,\n      default: false,\n    },\n    onPreview: {\n      type: Function as PropType<IFileHanlder>,\n      default: NOOP as IFileHanlder,\n    },\n    onRemove: {\n      type: Function as PropType<\n        (file: Nullable<FileList>, rawFile: ElFile) => void\n      >,\n      default: NOOP as (file: Nullable<FileList>, rawFile: ElFile) => void,\n    },\n    fileList: {\n      type: Array as PropType<UploadFile[]>,\n      default: () => [] as UploadFile[],\n    },\n    autoUpload: {\n      type: Boolean,\n      default: true,\n    },\n    listType: {\n      type: String as PropType<ListType>,\n      default: 'text',\n    },\n    httpRequest: {\n      type: Function as\n        | PropType<typeof ajax>\n        | PropType<(...args: unknown[]) => Promise<unknown>>,\n      default: () => ajax,\n    },\n    disabled: Boolean,\n    limit: {\n      type: Number as PropType<Nullable<number>>,\n      default: null,\n    },\n    onExceed: {\n      type: Function as PropType<\n        (files: FileList, fileList: UploadFile[]) => void\n      >,\n      default: NOOP,\n    },\n  },\n  setup(props) {\n    const reqs = ref({} as Record<string, XMLHttpRequest | Promise<any>>)\n    const ns = useNamespace('upload')\n    const mouseover = ref(false)\n    const inputRef = ref(null as Nullable<HTMLInputElement>)\n\n    function uploadFiles(files: FileList) {\n      if (props.limit && props.fileList.length + files.length > props.limit) {\n        props.onExceed(files, props.fileList)\n        return\n      }\n      let postFiles = Array.from(files)\n      if (!props.multiple) {\n        postFiles = postFiles.slice(0, 1)\n      }\n      if (postFiles.length === 0) {\n        return\n      }\n      postFiles.forEach((rawFile) => {\n        props.onStart(rawFile)\n        if (props.autoUpload) upload(rawFile as ElFile)\n      })\n    }\n\n    function upload(rawFile: ElFile) {\n      inputRef.value.value = null\n      if (!props.beforeUpload) {\n        return post(rawFile)\n      }\n      const before = props.beforeUpload(rawFile)\n      if (before instanceof Promise) {\n        before\n          .then((processedFile) => {\n            const fileType = Object.prototype.toString.call(processedFile)\n            if (fileType === '[object File]' || fileType === '[object Blob]') {\n              if (fileType === '[object Blob]') {\n                processedFile = new File([processedFile], rawFile.name, {\n                  type: rawFile.type,\n                })\n              }\n              for (const p in rawFile) {\n                if (hasOwn(rawFile, p)) {\n                  processedFile[p] = rawFile[p]\n                }\n              }\n              post(processedFile)\n            } else {\n              post(rawFile)\n            }\n          })\n          .catch(() => {\n            props.onRemove(null, rawFile)\n          })\n      } else if (before !== false) {\n        post(rawFile)\n      } else {\n        props.onRemove(null, rawFile)\n      }\n    }\n    function abort(file) {\n      const _reqs = reqs.value\n      if (file) {\n        let uid = file\n        if (file.uid) uid = file.uid\n        if (_reqs[uid]) {\n          ;(_reqs[uid] as XMLHttpRequest).abort()\n        }\n      } else {\n        Object.keys(_reqs).forEach((uid) => {\n          if (_reqs[uid]) (_reqs[uid] as XMLHttpRequest).abort()\n          delete _reqs[uid]\n        })\n      }\n    }\n\n    function post(rawFile: ElFile) {\n      const { uid } = rawFile\n      const options = {\n        headers: props.headers,\n        withCredentials: props.withCredentials,\n        file: rawFile,\n        data: props.data,\n        method: props.method,\n        filename: props.name,\n        action: props.action,\n        onProgress: (e) => {\n          props.onProgress(e, rawFile)\n        },\n        onSuccess: (res) => {\n          props.onSuccess(res, rawFile)\n          delete reqs.value[uid]\n        },\n        onError: (err) => {\n          props.onError(err, rawFile)\n          delete reqs.value[uid]\n        },\n      }\n      const req = props.httpRequest(options)\n      reqs.value[uid] = req\n      if (req instanceof Promise) {\n        req.then(options.onSuccess, options.onError)\n      }\n    }\n\n    function handleChange(e: DragEvent) {\n      const files = (e.target as HTMLInputElement).files\n      if (!files) return\n      uploadFiles(files)\n    }\n\n    function handleClick() {\n      if (!props.disabled) {\n        inputRef.value.value = null\n        inputRef.value.click()\n      }\n    }\n\n    function handleKeydown() {\n      handleClick()\n    }\n\n    return {\n      ns,\n      reqs,\n      mouseover,\n      inputRef,\n      abort,\n      post,\n      handleChange,\n      handleClick,\n      handleKeydown,\n      upload,\n      uploadFiles,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}