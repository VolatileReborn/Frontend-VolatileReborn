{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-2c1989f9\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"text-align\": \"center\"\n  }\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"font-weight\": \"bolder\",\n    \"font-size\": \"x-large\"\n  }\n}, \"测试报告提交\", -1));\n\nconst _hoisted_3 = {\n  class: \"task_container\"\n};\nconst _hoisted_4 = {\n  class: \"report_container\"\n};\nconst _hoisted_5 = {\n  class: \"report_head_container\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"font-size\": \"large\",\n    \"margin-top\": \"2px\",\n    \"font-weight\": \"bolder\",\n    \"margin-left\": \"5px\"\n  }\n}, \"缺陷提交\", -1));\n\nconst _hoisted_7 = /*#__PURE__*/_createTextVNode(\"点击上传应用截图\");\n\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"color\": \"#9A9A9A\"\n  }\n}, \" 请上传.jpg,.jpeg,.png类型的文件 \", -1));\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"提交\");\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n\n  const _component_checked = _resolveComponent(\"checked\");\n\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    style: {\n      \"width\": \"80%\"\n    }\n  }, {\n    header: _withCtx(() => [_hoisted_2]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_descriptions, null, {\n      title: _withCtx(() => [_createElementVNode(\"span\", null, \"任务名称： \" + _toDisplayString($data.task.taskName), 1)]),\n      default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n        label: \"任务简介\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($data.task.taskIntroduction), 1)]),\n        _: 1\n      })]),\n      _: 1\n    })]), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_icon, {\n      color: \"#409efc\",\n      size: 30\n    }, {\n      default: _withCtx(() => [_createVNode(_component_checked)]),\n      _: 1\n    }), _hoisted_6]), _createVNode(_component_el_form, {\n      model: $data.report_form,\n      \"label-width\": \"120px\",\n      \"label-position\": \"right\",\n      style: {\n        \"width\": \"80%\"\n      },\n      rules: $data.rules\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"测试报告名称\",\n        prop: \"reportName\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.report_form.reportName,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.report_form.reportName = $event)\n        }, null, 8, [\"modelValue\"])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"缺陷情况说明\",\n        prop: \"defectExplain\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.report_form.defectExplain,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.report_form.defectExplain = $event),\n          rows: 3,\n          type: \"textarea\"\n        }, null, 8, [\"modelValue\"])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"缺陷复现步骤\",\n        prop: \"defectReproductionStep\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.report_form.defectReproductionStep,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.report_form.defectReproductionStep = $event),\n          rows: 2,\n          type: \"textarea\"\n        }, null, 8, [\"modelValue\"])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"测试设备信息\",\n        prop: \"testEquipmentInformation\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.report_form.testEquipmentInformation,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.report_form.testEquipmentInformation = $event),\n          placeholder: \"从应用启动到缺陷出现的操作步骤\"\n        }, null, 8, [\"modelValue\"])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"缺陷应用截图\",\n        required: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_upload, {\n          action: \"\",\n          \"show-file-list\": \"\",\n          \"auto-upload\": true,\n          \"http-request\": $options.fnUploadRequest,\n          \"on-success\": $options.handleUploadSuccess,\n          \"file-list\": $data.fileList,\n          \"list-type\": \"picture\"\n        }, {\n          tip: _withCtx(() => [_hoisted_8]),\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\"\n          }, {\n            default: _withCtx(() => [_hoisted_7]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"http-request\", \"on-success\", \"file-list\"])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $options.onSubmit\n        }, {\n          default: _withCtx(() => [_hoisted_9]),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n          onClick: $options.cancelSubmit\n        }, {\n          default: _withCtx(() => [_hoisted_10]),\n          _: 1\n        }, 8, [\"onClick\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"model\", \"rules\"])])]),\n    _: 1\n  })]);\n}","map":{"version":3,"mappings":"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","names":["style","_createElementVNode","class","_createElementBlock","_createVNode","_component_el_card","header","_hoisted_2","_component_el_descriptions","title","_toDisplayString","$data","taskName","_component_el_descriptions_item","label","taskIntroduction","_component_el_icon","color","size","_component_checked","_hoisted_6","_component_el_form","model","rules","_component_el_form_item","prop","_component_el_input","reportName","$event","defectExplain","rows","type","defectReproductionStep","testEquipmentInformation","placeholder","required","_component_el_upload","action","$options","tip","_hoisted_8","_component_el_button","onClick"],"sourceRoot":"","sources":["/home/lyk/Projects/Volatile/frontend-volatile/src/views/report/ReportRelease.vue"],"sourcesContent":["<template>\n  <div style=\"display: flex;justify-content: center;text-align: center\">\n  <el-card style=\"width: 80%\">\n    <template #header>\n      <span style=\"font-weight: bolder;font-size:x-large\">测试报告提交</span>\n    </template>\n    <div class=\"task_container\">\n      <el-descriptions>\n        <template #title>\n          <span>任务名称： {{task.taskName}}</span>\n        </template>\n        <el-descriptions-item label=\"任务简介\">{{task.taskIntroduction}}</el-descriptions-item>\n      </el-descriptions>\n    </div>\n    <div class=\"report_container\">\n      <div class=\"report_head_container\">\n        <el-icon color=\"#409efc\" :size=\"30\">\n          <checked />\n        </el-icon>\n        <div style=\"font-size: large;margin-top: 2px;font-weight: bolder;margin-left: 5px\">缺陷提交</div>\n      </div>\n      <el-form :model=\"report_form\" label-width=\"120px\" label-position=\"right\" style=\"width:80%\" :rules=\"rules\">\n        <el-form-item label=\"测试报告名称\" prop=\"reportName\">\n          <el-input v-model=\"report_form.reportName\" />\n        </el-form-item>\n        <el-form-item label=\"缺陷情况说明\" prop=\"defectExplain\">\n          <el-input v-model=\"report_form.defectExplain\" :rows=\"3\" type=\"textarea\" />\n        </el-form-item>\n        <el-form-item label=\"缺陷复现步骤\" prop=\"defectReproductionStep\">\n          <el-input v-model=\"report_form.defectReproductionStep\" :rows=\"2\" type=\"textarea\" />\n        </el-form-item>\n        <el-form-item label=\"测试设备信息\" prop=\"testEquipmentInformation\">\n          <el-input v-model=\"report_form.testEquipmentInformation\" placeholder=\"从应用启动到缺陷出现的操作步骤\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"缺陷应用截图\" required>\n          <el-upload\n            action=\"\"\n            show-file-list\n            :auto-upload=\"true\"\n            :http-request=\"fnUploadRequest\"\n            :on-success=\"handleUploadSuccess\"\n            :file-list=\"fileList\"\n            list-type=\"picture\">\n            <el-button type=\"primary\">点击上传应用截图</el-button>\n            <template #tip>\n              <div style=\"color: #9A9A9A\">\n                请上传.jpg,.jpeg,.png类型的文件\n              </div>\n            </template>\n          </el-upload>\n        </el-form-item>\n        <el-form-item>\n          <el-button type=\"primary\" @click=\"onSubmit\">提交</el-button>\n          <el-button @click=\"cancelSubmit\">取消</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </el-card>\n  </div>\n</template>\n\n<script>\nimport {employeeTaskDetail} from \"@/api/square\";\nimport {Checked} from \"@element-plus/icons-vue\"\nimport {reactive} from \"vue\"\nimport {publishReport} from \"@/api/report\";\nimport oss from '@/utils/oss'\n\nconst report_form = reactive({\n  reportName:'',\n  defectPictureList:[],\n  defectExplain:'',\n  defectReproductionStep:'',\n  testEquipmentInformation:''\n})\n\nconst rules = reactive({\n  reportName:[\n    {\n      required:true,\n      message:'请填写报告名称',\n      trigger:'blur'\n    }\n  ],\n  defectExplain:[\n    {\n      required:true,\n      message:'请填写缺陷情况说明',\n      trigger:'blur'\n    },\n    {\n      min:5,\n      max:100,\n      message: '缺陷情况说明不得少于5个字符，不得多于100个字符',\n      trigger: 'blur'\n    }\n  ],\n  defectReproductionStep: [\n    {\n      required:true,\n      message:'请填写缺陷复现步骤',\n      trigger:'blur'\n    },\n    {\n      min:5,\n      max:100,\n      message: '缺陷复现步骤不得少于5个字符，不得多于100个字符',\n      trigger:'blur'\n    }\n  ],\n  testEquipmentInformation:[\n    {\n      required:true,\n      message:'请填写测试设备信息',\n      trigger:'blur'\n    },\n    {\n      min:5,\n      max:20,\n      message: '测试设备信息不得少于5个字符，不得多于20个字符',\n      trigger:'blur'\n    }\n  ],\n})\n\nexport default {\n  name: \"ReportRelease\",\n  data(){\n    return {\n      report_form,\n      rules,\n      task:{},\n      taskId:this.$route.params.taskId,\n      fileList:[],\n    }\n  },\n  mounted() {\n    employeeTaskDetail({taskId:this.taskId,token:window.localStorage.getItem(\"token\")})\n    .then(res => {\n      if(res.response.code === 0)\n      {\n        console.log(\"获取任务数据成功\")\n        this.task = res.task\n      }\n      else\n      {\n        console.log(res.response.msg)\n      }\n    })\n  },\n  components:{\n    Checked\n  },\n  methods:{\n    onSubmit() {\n      const token = window.localStorage.getItem(\"token\")\n      publishReport({testReport: report_form,token:token,taskId:this.taskId})\n      .then(res =>{\n        if(res.response.code === 0)\n        {\n          console.log(res.response.msg)\n        }\n        else\n        {\n          console.log(res.response.msg)\n        }\n      })\n    },\n    cancelSubmit(){\n      this.$router.back(-1)\n    },\n    async fnUploadRequest(option){\n      await oss.ossUploadFile(option).then(res => {\n        const file = {\n          fileName:res.fileName,\n          fileUrl:res.fileUrl\n        }\n        report_form.defectPictureList.push(file)\n      })\n    },\n    handleUploadSuccess(){\n      console.log(report_form.defectPictureList)\n      //todo:添加路由：报告提交成功\n      this.$router.push(\"/reportReleaseSucceed\")\n    }\n  }\n}\n</script>\n\n<style scoped>\n.report_head_container{\n  display: flex;\n  flex-direction: row;\n}\n</style>"]},"metadata":{},"sourceType":"module"}