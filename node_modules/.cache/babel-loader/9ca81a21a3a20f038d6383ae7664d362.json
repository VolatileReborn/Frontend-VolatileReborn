{"ast":null,"code":"import { ref, watch } from 'vue';\nimport { NOOP } from '@vue/shared';\nimport { cloneDeep } from 'lodash-unified';\n\nfunction getFile(rawFile, uploadFiles) {\n  return uploadFiles.find(file => file.uid === rawFile.uid);\n}\n\nfunction genUid(seed) {\n  return Date.now() + seed;\n}\n\nvar useHandlers = props => {\n  const uploadFiles = ref([]);\n  const uploadRef = ref(null);\n  let tempIndex = 1;\n\n  function abort(file) {\n    uploadRef.value.abort(file);\n  }\n\n  function clearFiles(status = [\"ready\", \"uploading\", \"success\", \"fail\"]) {\n    uploadFiles.value = uploadFiles.value.filter(row => {\n      return !status.includes(row.status);\n    });\n  }\n\n  function handleError(err, rawFile) {\n    const file = getFile(rawFile, uploadFiles.value);\n    file.status = \"fail\";\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1);\n    props.onError(err, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  }\n\n  function handleProgress(ev, rawFile) {\n    const file = getFile(rawFile, uploadFiles.value);\n    props.onProgress(ev, file, uploadFiles.value);\n    file.status = \"uploading\";\n    file.percentage = ev.percent || 0;\n  }\n\n  function handleSuccess(res, rawFile) {\n    const file = getFile(rawFile, uploadFiles.value);\n\n    if (file) {\n      file.status = \"success\";\n      file.response = res;\n      props.onSuccess(res, file, uploadFiles.value);\n      props.onChange(file, uploadFiles.value);\n    }\n  }\n\n  function handleStart(rawFile) {\n    const uid = genUid(tempIndex++);\n    rawFile.uid = uid;\n    const file = {\n      name: rawFile.name,\n      percentage: 0,\n      status: \"ready\",\n      size: rawFile.size,\n      raw: rawFile,\n      uid\n    };\n\n    if (props.listType === \"picture-card\" || props.listType === \"picture\") {\n      try {\n        file.url = URL.createObjectURL(rawFile);\n      } catch (err) {\n        console.error(\"[Element Error][Upload]\", err);\n        props.onError(err, file, uploadFiles.value);\n      }\n    }\n\n    uploadFiles.value.push(file);\n    props.onChange(file, uploadFiles.value);\n  }\n\n  function handleRemove(file, raw) {\n    if (raw) {\n      file = getFile(raw, uploadFiles.value);\n    }\n\n    const revokeObjectURL = () => {\n      if (file.url && file.url.indexOf(\"blob:\") === 0) {\n        URL.revokeObjectURL(file.url);\n      }\n    };\n\n    const doRemove = () => {\n      abort(file);\n      const fileList = uploadFiles.value;\n      fileList.splice(fileList.indexOf(file), 1);\n      props.onRemove(file, fileList);\n      revokeObjectURL();\n    };\n\n    if (!props.beforeRemove) {\n      doRemove();\n    } else if (typeof props.beforeRemove === \"function\") {\n      const before = props.beforeRemove(file, uploadFiles.value);\n\n      if (before instanceof Promise) {\n        before.then(() => {\n          doRemove();\n        }).catch(NOOP);\n      } else if (before !== false) {\n        doRemove();\n      }\n    }\n  }\n\n  function submit() {\n    uploadFiles.value.filter(file => file.status === \"ready\").forEach(file => {\n      uploadRef.value.upload(file.raw);\n    });\n  }\n\n  watch(() => props.listType, val => {\n    if (val === \"picture-card\" || val === \"picture\") {\n      uploadFiles.value = uploadFiles.value.map(file => {\n        if (!file.url && file.raw) {\n          try {\n            file.url = URL.createObjectURL(file.raw);\n          } catch (err) {\n            props.onError(err, file, uploadFiles.value);\n          }\n        }\n\n        return file;\n      });\n    }\n  });\n  watch(() => props.fileList, fileList => {\n    uploadFiles.value = fileList.map(file => {\n      const cloneFile = cloneDeep(file);\n      return { ...cloneFile,\n        uid: file.uid || genUid(tempIndex++),\n        status: file.status || \"success\"\n      };\n    });\n  }, {\n    immediate: true,\n    deep: true\n  });\n  return {\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n    uploadFiles,\n    uploadRef\n  };\n};\n\nexport { useHandlers as default };","map":{"version":3,"mappings":"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","names":["getFile","rawFile","uploadFiles","find","file","uid","genUid","seed","Date","now","props","ref","uploadRef","tempIndex","abort","value","clearFiles","status","filter","row","includes","handleError","err","splice","indexOf","onError","onChange","handleProgress","ev","onProgress","percentage","percent","handleSuccess","res","response","onSuccess","handleStart","name","size","raw","listType","url","URL","createObjectURL","console","error","push","handleRemove","revokeObjectURL","doRemove","fileList","onRemove","beforeRemove","before","Promise","then","catch","NOOP","submit","forEach","upload","watch","val","map","cloneFile","cloneDeep","immediate","deep"],"sources":["../../../../../../packages/components/upload/src/useHandlers.ts"],"sourcesContent":["import { ref, watch } from 'vue'\nimport { NOOP } from '@vue/shared'\nimport { cloneDeep } from 'lodash-unified'\n\n// Inline types\nimport type {\n  ListType,\n  UploadFile,\n  UploadStatus,\n  ElFile,\n  ElUploadProgressEvent,\n  IUseHandlersProps,\n} from './upload.type'\ntype UploadRef = {\n  abort: (file: UploadFile) => void\n  upload: (file: ElFile) => void\n}\n// helpers\nfunction getFile(rawFile: ElFile, uploadFiles: UploadFile[]) {\n  return uploadFiles.find((file) => file.uid === rawFile.uid)\n}\n\nfunction genUid(seed: number) {\n  return Date.now() + seed\n}\n\nexport default (props: IUseHandlersProps) => {\n  const uploadFiles = ref<UploadFile[]>([])\n  const uploadRef = ref<UploadRef>(null)\n\n  let tempIndex = 1\n\n  function abort(file: UploadFile) {\n    uploadRef.value.abort(file)\n  }\n\n  function clearFiles(\n    status: UploadStatus[] = ['ready', 'uploading', 'success', 'fail']\n  ) {\n    uploadFiles.value = uploadFiles.value.filter((row) => {\n      return !status.includes(row.status)\n    })\n  }\n\n  function handleError(err: Error, rawFile: ElFile) {\n    const file = getFile(rawFile, uploadFiles.value)\n    file.status = 'fail'\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1)\n    props.onError(err, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  function handleProgress(ev: ElUploadProgressEvent, rawFile: ElFile) {\n    const file = getFile(rawFile, uploadFiles.value)\n    props.onProgress(ev, file, uploadFiles.value)\n    file.status = 'uploading'\n    file.percentage = ev.percent || 0\n  }\n\n  function handleSuccess(res: any, rawFile: ElFile) {\n    const file = getFile(rawFile, uploadFiles.value)\n    if (file) {\n      file.status = 'success'\n      file.response = res\n      props.onSuccess(res, file, uploadFiles.value)\n      props.onChange(file, uploadFiles.value)\n    }\n  }\n\n  function handleStart(rawFile: ElFile) {\n    const uid = genUid(tempIndex++)\n    rawFile.uid = uid\n    const file: UploadFile = {\n      name: rawFile.name,\n      percentage: 0,\n      status: 'ready',\n      size: rawFile.size,\n      raw: rawFile,\n      uid,\n    }\n    if (props.listType === 'picture-card' || props.listType === 'picture') {\n      try {\n        file.url = URL.createObjectURL(rawFile)\n      } catch (err) {\n        console.error('[Element Error][Upload]', err)\n        props.onError(err, file, uploadFiles.value)\n      }\n    }\n    uploadFiles.value.push(file)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  function handleRemove(file: UploadFile, raw: ElFile) {\n    if (raw) {\n      file = getFile(raw, uploadFiles.value)\n    }\n    const revokeObjectURL = () => {\n      if (file.url && file.url.indexOf('blob:') === 0) {\n        URL.revokeObjectURL(file.url)\n      }\n    }\n    const doRemove = () => {\n      abort(file)\n      const fileList = uploadFiles.value\n      fileList.splice(fileList.indexOf(file), 1)\n      props.onRemove(file, fileList)\n      revokeObjectURL()\n    }\n    if (!props.beforeRemove) {\n      doRemove()\n    } else if (typeof props.beforeRemove === 'function') {\n      const before = props.beforeRemove(file, uploadFiles.value)\n      if (before instanceof Promise) {\n        before\n          .then(() => {\n            doRemove()\n          })\n          .catch(NOOP)\n      } else if (before !== false) {\n        doRemove()\n      }\n    }\n  }\n\n  function submit() {\n    uploadFiles.value\n      .filter((file) => file.status === 'ready')\n      .forEach((file) => {\n        uploadRef.value.upload(file.raw)\n      })\n  }\n\n  watch(\n    () => props.listType,\n    (val: ListType) => {\n      if (val === 'picture-card' || val === 'picture') {\n        uploadFiles.value = uploadFiles.value.map((file) => {\n          if (!file.url && file.raw) {\n            try {\n              file.url = URL.createObjectURL(file.raw)\n            } catch (err) {\n              props.onError(err, file, uploadFiles.value)\n            }\n          }\n          return file\n        })\n      }\n    }\n  )\n\n  watch(\n    () => props.fileList,\n    (fileList: UploadFile[]) => {\n      uploadFiles.value = fileList.map((file) => {\n        const cloneFile = cloneDeep(file)\n        return {\n          ...cloneFile,\n          uid: file.uid || genUid(tempIndex++),\n          status: file.status || 'success',\n        }\n      })\n    },\n    {\n      immediate: true,\n      deep: true,\n    }\n  )\n\n  return {\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n    uploadFiles,\n    uploadRef,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}