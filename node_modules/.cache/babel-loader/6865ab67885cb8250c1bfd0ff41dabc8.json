{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a62fd956\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card_header\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"font-weight\": \"bolder\"\n  }\n}, \"任务信息提交\")], -1));\n\nconst _hoisted_3 = {\n  class: \"input_container\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"-\", -1));\n\nconst _hoisted_5 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\"\n  }\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"点击上传待测应用可执行文件\");\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"color\": \"#9A9A9A\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"5px\"\n  }\n}, \" 请上传.exe,.apk,.jar类型的文件 \", -1));\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"点击上传测试需求描述文件\");\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"color\": \"#9A9A9A\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"5px\"\n  }\n}, \" 请上传.doc,.md,.pdf,.docx类型的文件 \", -1));\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"提交任务\");\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"box_card\"\n  }, {\n    header: _withCtx(() => [_hoisted_2]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_form, {\n      model: $data.task_form,\n      \"label-width\": \"120px\",\n      \"label-position\": \"right\",\n      rules: $data.rules\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"任务名称\",\n        prop: \"taskName\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.task_form.taskName,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.task_form.taskName = $event)\n        }, null, 8, [\"modelValue\"])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"任务简介\",\n        prop: \"taskIntroduction\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.task_form.taskIntroduction,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.task_form.taskIntroduction = $event),\n          rows: 3,\n          type: \"textarea\"\n        }, null, 8, [\"modelValue\"])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"测试时间段\",\n        required: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 11\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            prop: \"taskStartTime\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n              modelValue: $data.task_form.taskStartTime,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.task_form.taskStartTime = $event),\n              type: \"date\",\n              style: {\n                \"width\": \"100%\"\n              }\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_component_el_col, {\n          span: 2,\n          style: {\n            \"display\": \"flex\",\n            \"text-align\": \"center\",\n            \"justify-content\": \"center\"\n          }\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n        }), _createVNode(_component_el_col, {\n          span: 11\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            prop: \"taskEndTime\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n              modelValue: $data.task_form.taskEndTime,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.task_form.taskEndTime = $event),\n              type: \"date\",\n              style: {\n                \"width\": \"100%\"\n              }\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        style: {\n          \"margin-left\": \"-120px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 11\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"工人数量\",\n            required: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input_number, {\n              modelValue: $data.task_form.workerNumTotal,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.task_form.workerNumTotal = $event),\n              min: 1,\n              max: 20,\n              step: 1,\n              style: {\n                \"width\": \"200px\"\n              }\n            }, null, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_component_el_col, {\n          span: 11\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"测试类型\",\n            required: \"\",\n            prop: \"taskType\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: $data.task_form.taskType,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.task_form.taskType = $event)\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.taskTypes, item => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: item.value,\n                  label: item.label,\n                  value: item.value\n                }, null, 8, [\"label\", \"value\"]);\n              }), 128))]),\n              _: 1\n            }, 8, [\"modelValue\"])]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        label: \"附件\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_upload, {\n          action: \"\",\n          \"show-file-list\": \"\",\n          accept: \".exe,.apk,.jar\",\n          limit: 1,\n          \"on-success\": $options.handleUploadSuccess1\n        }, {\n          tip: _withCtx(() => [_hoisted_7]),\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\"\n          }, {\n            default: _withCtx(() => [_hoisted_6]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"on-success\"]), _createVNode(_component_el_upload, {\n          action: \"\",\n          limit: 1,\n          \"show-file-list\": \"\",\n          accept: \".md,.doc,.pdf,.docx\",\n          \"on-success\": $options.handleUploadSuccess2\n        }, {\n          tip: _withCtx(() => [_hoisted_9]),\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\"\n          }, {\n            default: _withCtx(() => [_hoisted_8]),\n            _: 1\n          })]),\n          _: 1\n        }, 8, [\"on-success\"])])]),\n        _: 1\n      }), _createVNode(_component_el_form_item, {\n        style: {\n          \"margin-left\": \"340px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $options.handleSubmit\n        }, {\n          default: _withCtx(() => [_hoisted_10]),\n          _: 1\n        }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n          onClick: $options.goBack\n        }, {\n          default: _withCtx(() => [_hoisted_11]),\n          _: 1\n        }, 8, [\"onClick\"])]),\n        _: 1\n      })]),\n      _: 1\n    }, 8, [\"model\", \"rules\"])])]),\n    _: 1\n  })]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","style","_createElementBlock","_createVNode","_component_el_card","header","_hoisted_2","_component_el_form","model","$data","rules","_component_el_form_item","label","prop","_component_el_input","taskName","$event","taskIntroduction","rows","type","required","_component_el_col","span","_component_el_date_picker","taskStartTime","_hoisted_4","taskEndTime","_component_el_input_number","workerNumTotal","min","max","step","_component_el_select","taskType","_Fragment","_renderList","item","_createBlock","_component_el_option","key","value","_component_el_upload","action","accept","limit","$options","tip","_hoisted_7","_component_el_button","plain","_hoisted_9","onClick"],"sourceRoot":"","sources":["/home/lyk/Projects/Volatile/frontend-volatile/src/views/task/TaskRelease.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  <el-card class=\"box_card\">\n    <template #header>\n      <div class=\"card_header\">\n        <span style=\"font-weight: bolder\">任务信息提交</span>\n      </div>\n    </template>\n    <div class=\"input_container\">\n      <el-form :model=\"task_form\" label-width=\"120px\" label-position=\"right\" :rules=\"rules\" >\n        <el-form-item label=\"任务名称\" prop=\"taskName\">\n          <el-input v-model=\"task_form.taskName\" ></el-input>\n        </el-form-item>\n        <el-form-item label=\"任务简介\" prop=\"taskIntroduction\">\n          <el-input v-model=\"task_form.taskIntroduction\" :rows=\"3\" type=\"textarea\" ></el-input>\n        </el-form-item>\n        <el-form-item label=\"测试时间段\" required>\n          <el-col :span=\"11\">\n            <el-form-item prop=\"taskStartTime\">\n              <el-date-picker\n                v-model=\"task_form.taskStartTime\"\n                type=\"date\"\n                style=\"width:100%\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"2\" style=\"display: flex;text-align: center;justify-content: center\">\n            <span >-</span>\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item prop=\"taskEndTime\">\n              <el-date-picker\n                v-model=\"task_form.taskEndTime\"\n                type=\"date\"\n                style=\"width: 100%\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n        </el-form-item>\n        <el-form-item style=\"margin-left: -120px\">\n          <el-col :span=\"11\">\n            <el-form-item label=\"工人数量\"  required>\n              <el-input-number v-model=\"task_form.workerNumTotal\" :min=\"1\" :max=\"20\" :step=\"1\" style=\"width: 200px\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item label=\"测试类型\" required prop=\"taskType\">\n              <el-select v-model=\"task_form.taskType\" >\n                <el-option\n                  v-for=\"item in taskTypes\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-form-item>\n        <el-form-item label=\"附件\"  >\n          <div style=\"display: flex;flex-direction: column\">\n            <el-upload\n              action=\"\"\n              show-file-list\n              accept=\".exe,.apk,.jar\"\n              :limit=\"1\"\n              :on-success=\"handleUploadSuccess1\"\n              >\n              <el-button type=\"primary\" plain>点击上传待测应用可执行文件</el-button>\n              <template #tip>\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\n                请上传.exe,.apk,.jar类型的文件\n                </div>\n              </template>\n            </el-upload>\n            <el-upload\n                action=\"\"\n                :limit=\"1\"\n                show-file-list\n                accept=\".md,.doc,.pdf,.docx\"\n                :on-success=\"handleUploadSuccess2\"\n                >\n              <el-button type=\"primary\" plain >点击上传测试需求描述文件</el-button>\n              <template #tip>\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\n                  请上传.doc,.md,.pdf,.docx类型的文件\n                </div>\n              </template>\n            </el-upload>\n          </div>\n        </el-form-item>\n        <el-form-item style=\"margin-left: 340px\">\n          <el-button type=\"primary\" @click=\"handleSubmit\">提交任务</el-button>\n          <el-button @click=\"goBack\">取消</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </el-card>\n  </div>\n</template>\n\n<script >\nimport {publishTask} from \"@/api/task\";\nimport {reactive} from \"vue\";\nconst task_form = reactive({\n  taskName: '',\n  taskIntroduction: '',\n  taskStartTime: '',\n  taskEndTime: '',\n  workerNumTotal: 1,\n  taskType: '',\n  executableFileList:[],\n  requirementDescriptionFileList:[]\n})\nconst rules = reactive({\n  taskName: [\n    {\n      required: true,\n      message: '请输入任务名称',\n      trigger: 'blur'\n    },\n    {\n      min: 3,\n      max: 8,\n      message: '任务名称不少于3个字符，不多于8个字符',\n      trigger: 'blur'\n    }\n  ],\n  taskIntroduction:[\n    {\n      required: true,\n      message: '请输入任务简介',\n      trigger: 'blur'\n    },\n    {\n      min: 5,\n      max: 40,\n      massage: '任务简介不少于5个字符，不多于40个字符',\n      trigger: 'blur'\n    }\n  ],\n  taskStartTime:[\n    {\n      type: 'date',\n      required: true,\n      message: '请选择任务开始时间，注意不要早于当前时间',\n      trigger: 'change'\n    }\n  ],\n  taskEndTime:[\n    {\n      type: 'date',\n      required: true,\n      message: '请选择任务结束时间',\n      trigger: 'change'\n    }\n  ],\n  taskType: [\n    {\n      required: true,\n      message: '请选择测试类型',\n      trigger: 'change'\n    }\n  ]\n})\n\nconst handleUploadSuccess1 = (response,file) => {\n  let fileUrl = response.data.url;\n  let fileName = file.name\n  task_form.executableFileList.push({fileName:fileName,fileURL:fileUrl})\n}\n\nconst handleUploadSuccess2 = (response,file) => {\n  let fileUrl = response.data.url;\n  let fileName = file.name\n  task_form.requirementDescriptionFileList.push({fileName:fileName,fileURL:fileUrl})\n}\n\nexport default {\n  name: \"TaskRelease\",\n  data() {\n    return {\n      task_form,\n      rules,\n      taskTypes:[\n        {\n          value:'0',\n          label: '功能测试'\n        },\n        {\n          value: '1',\n          label: '性能测试',\n        }\n      ],\n      userToken:  window.localStorage.getItem(\"userToken\"),\n    }\n  },\n  components:{\n\n  },\n  methods: {\n    handleUploadSuccess1,\n    handleUploadSuccess2,\n    handleSubmit()\n    {\n      window.localStorage.setItem(\"userToken\",\"testToken\")\n      const task = {\n          \"requirementDescriptionFileList\": this.task_form.requirementDescriptionFileList,\n          \"executableFileList\": this.task_form.executableFileList,\n          \"taskIntroduction\":this.task_form.taskIntroduction,\n          \"taskStartTime\":this.task_form.taskStartTime,\n          \"taskEndTime\":this.task_form.taskEndTime,\n          \"taskType\":this.task_form.taskType,\n          \"taskName\":this.task_form.taskName,\n        }\n      publishTask({token:this.userToken,task:task})\n      .then(res =>{\n        if(res.code === 1) {\n          console.log(res.msg)\n          console.log(res.data)\n          this.$router.push(\"/taskEnrollSucceed\")\n        }\n        else {console.log(res.msg)}\n      })\n    },\n    goBack(){\n      this.$router.back(-1)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container{\n  display: flex;\n  text-align: center;\n  justify-content: center;\n}\n.box_card{\n  width: 80%;\n  margin-top: 20px;\n}\n.card_header{\n  text-align: left;\n}\n.input_container{\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n}\n</style>"]},"metadata":{},"sourceType":"module"}