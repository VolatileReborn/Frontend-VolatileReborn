{"ast":null,"code":"import { defineComponent, inject, computed, h, renderSlot } from 'vue';\nimport '../../../utils/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nconst colProps = buildProps({\n  tag: {\n    type: String,\n    default: \"div\"\n  },\n  span: {\n    type: Number,\n    default: 24\n  },\n  offset: {\n    type: Number,\n    default: 0\n  },\n  pull: {\n    type: Number,\n    default: 0\n  },\n  push: {\n    type: Number,\n    default: 0\n  },\n  xs: {\n    type: definePropType([Number, Object]),\n    default: () => mutable({})\n  },\n  sm: {\n    type: definePropType([Number, Object]),\n    default: () => mutable({})\n  },\n  md: {\n    type: definePropType([Number, Object]),\n    default: () => mutable({})\n  },\n  lg: {\n    type: definePropType([Number, Object]),\n    default: () => mutable({})\n  },\n  xl: {\n    type: definePropType([Number, Object]),\n    default: () => mutable({})\n  }\n});\nvar Col = defineComponent({\n  name: \"ElCol\",\n  props: colProps,\n\n  setup(props, {\n    slots\n  }) {\n    const {\n      gutter\n    } = inject(\"ElRow\", {\n      gutter: {\n        value: 0\n      }\n    });\n    const ns = useNamespace(\"col\");\n    const style = computed(() => {\n      if (gutter.value) {\n        return {\n          paddingLeft: `${gutter.value / 2}px`,\n          paddingRight: `${gutter.value / 2}px`\n        };\n      }\n\n      return {};\n    });\n    const classList = computed(() => {\n      const classes = [];\n      const pos = [\"span\", \"offset\", \"pull\", \"push\"];\n      pos.forEach(prop => {\n        const size = props[prop];\n\n        if (typeof size === \"number\") {\n          if (prop === \"span\") classes.push(ns.b(`${props[prop]}`));else if (size > 0) classes.push(ns.b(`${prop}-${props[prop]}`));\n        }\n      });\n      const sizes = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\n      sizes.forEach(size => {\n        if (typeof props[size] === \"number\") {\n          classes.push(ns.b(`${size}-${props[size]}`));\n        } else if (typeof props[size] === \"object\") {\n          const sizeProps = props[size];\n          Object.keys(sizeProps).forEach(prop => {\n            classes.push(prop !== \"span\" ? ns.b(`${size}-${prop}-${sizeProps[prop]}`) : ns.b(`${size}-${sizeProps[prop]}`));\n          });\n        }\n      });\n\n      if (gutter.value) {\n        classes.push(\"is-guttered\");\n      }\n\n      return classes;\n    });\n    return () => h(props.tag, {\n      class: [ns.b(), classList.value],\n      style: style.value\n    }, [renderSlot(slots, \"default\")]);\n  }\n\n});\nexport { colProps, Col as default };","map":{"version":3,"mappings":"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","names":["colProps","buildProps","tag","type","String","default","span","Number","offset","pull","push","xs","definePropType","Object","mutable","sm","md","lg","xl","defineComponent","name","props","setup","slots","gutter","inject","value","ns","useNamespace","style","computed","paddingLeft","paddingRight","classList","classes","pos","forEach","prop","size","b","sizes","sizeProps","keys","h","class","renderSlot"],"sources":["../../../../../../packages/components/col/src/col.ts"],"sourcesContent":["import { defineComponent, computed, inject, h, renderSlot } from 'vue'\nimport { buildProps, definePropType, mutable } from '@element-plus/utils'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ExtractPropTypes, CSSProperties } from 'vue'\n\ntype SizeObject = {\n  span?: number\n  offset?: number\n}\ntype Size = number | SizeObject\n\nexport const colProps = buildProps({\n  tag: {\n    type: String,\n    default: 'div',\n  },\n  span: {\n    type: Number,\n    default: 24,\n  },\n  offset: {\n    type: Number,\n    default: 0,\n  },\n  pull: {\n    type: Number,\n    default: 0,\n  },\n  push: {\n    type: Number,\n    default: 0,\n  },\n  xs: {\n    type: definePropType<Size>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n  sm: {\n    type: definePropType<Size>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n  md: {\n    type: definePropType<Size>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n  lg: {\n    type: definePropType<Size>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n  xl: {\n    type: definePropType<Size>([Number, Object]),\n    default: () => mutable({} as const),\n  },\n} as const)\nexport type ColProps = ExtractPropTypes<typeof colProps>\n\nexport default defineComponent({\n  name: 'ElCol',\n  props: colProps,\n\n  setup(props, { slots }) {\n    const { gutter } = inject('ElRow', { gutter: { value: 0 } })\n    const ns = useNamespace('col')\n\n    const style = computed<CSSProperties>(() => {\n      if (gutter.value) {\n        return {\n          paddingLeft: `${gutter.value / 2}px`,\n          paddingRight: `${gutter.value / 2}px`,\n        }\n      }\n      return {}\n    })\n\n    const classList = computed(() => {\n      const classes: string[] = []\n\n      const pos = ['span', 'offset', 'pull', 'push'] as const\n      pos.forEach((prop) => {\n        const size = props[prop]\n        if (typeof size === 'number') {\n          if (prop === 'span') classes.push(ns.b(`${props[prop]}`))\n          else if (size > 0) classes.push(ns.b(`${prop}-${props[prop]}`))\n        }\n      })\n\n      const sizes = ['xs', 'sm', 'md', 'lg', 'xl'] as const\n      sizes.forEach((size) => {\n        if (typeof props[size] === 'number') {\n          classes.push(ns.b(`${size}-${props[size]}`))\n        } else if (typeof props[size] === 'object') {\n          const sizeProps = props[size]\n          Object.keys(sizeProps).forEach((prop) => {\n            classes.push(\n              prop !== 'span'\n                ? ns.b(`${size}-${prop}-${sizeProps[prop]}`)\n                : ns.b(`${size}-${sizeProps[prop]}`)\n            )\n          })\n        }\n      })\n      // this is for the fix\n      if (gutter.value) {\n        classes.push('is-guttered')\n      }\n\n      return classes\n    })\n\n    return () =>\n      h(\n        props.tag,\n        {\n          class: [ns.b(), classList.value],\n          style: style.value,\n        },\n        [renderSlot(slots, 'default')]\n      )\n  },\n})\n"]},"metadata":{},"sourceType":"module"}