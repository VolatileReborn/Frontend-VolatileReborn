{"ast":null,"code":"import { SQUARE_MODULE } from \"@/api/_prefix\";\nimport { EMPLOYEE_MODULE } from \"@/api/_prefix\";\nimport { EMPLOYER_MODULE } from \"@/api/_prefix\";\nimport axios from \"axios\";\n/**\n * 接包方浏览正在执行的任务 GET /api/employee/browserUndertakingTasks\n  * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\n */\n\nexport const employeeBrowserUndertakingTasks = payload => {\n  const {\n    token\n  } = payload;\n  return axios.get(`${EMPLOYEE_MODULE}/browserUndertakingTasks?token=${token}`).then(res => {\n    return res.data;\n  });\n};\n/**\n * 接包方浏览已经完成的任务 GET /api/employee/browserFinishedTasks\n * @returns {Promise<{msg: string, code: number, data: {finishedTaskList: [{taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\n */\n\nexport const employeeBrowserFinishedTasks = payload => {\n  const {\n    token\n  } = payload;\n  return axios.get(`${EMPLOYEE_MODULE}/browserFinishedTasks?token=${token}`).then(res => {\n    return res.data;\n  });\n};\n/**\n * 发包方浏览正在执行的任务 GET /api/employer/browserUndertakingTasks\n  * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\n */\n\nexport const employerBrowserUndertakingTasks = payload => {\n  const {\n    token\n  } = payload;\n  return axios.get(`${EMPLOYER_MODULE}/browserUndertakingTasks?token=${token}`).then(res => {\n    return res.data;\n  }); // return Promise.resolve({\n  //         \"code\":1,\n  //         \"msg\":\"获取数据成功\",\n  //         \"data\":{\n  //             \"token\":token,\n  //             \"taskList\":[\n  //                 {taskId: 0,taskName: 'test_task',taskType: 0,workerNumTotal: 10,workerNumLeft: 5,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\n  //                 {taskId: 1,taskName: 'test_task333',taskType: 1,workerNumTotal: 20,workerNumLeft: 6,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\n  //                 {taskId: 2,taskName: 'test_task5',taskType: 0,workerNumTotal: 20,workerNumLeft: 6,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\n  //                 {taskId: 3,taskName: 'test_task363',taskType: 1,workerNumTotal: 20,workerNumLeft: 6,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\n  //             ]\n  //         }\n  //     })\n};\n/**\n * 发包方浏览已经完成的任务 GET /api/employer/browserFinishedTasks \n * @returns {Promise<{msg: string, code: number, data: {finishedTaskList: [{workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\n */\n\nexport const employerBrowserFinishedTasks = payload => {\n  const {\n    token\n  } = payload;\n  return axios.get(`${EMPLOYER_MODULE}/browserFinishedTasks?token=${token}`).then(res => {\n    return res.data;\n  });\n};\n/**\n * 发包方浏览大厅中的具体任务 GET /square/employeeTaskDetail\n * @param payload\n * @returns {Promise<{code: number, data: {task: {workerNumLeft: number, taskType: number, taskState: boolean, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string, taskIntroduction: string}, isSelected: boolean}, message: string}>}\n */\n\nexport const employeeTaskDetail = payload => {\n  const {\n    token,\n    taskId\n  } = payload;\n  return axios.get(`${SQUARE_MODULE}/employeeTaskDetail/${taskId}?token=${token}`).then(res => {\n    return res.data;\n  }); // return Promise.resolve({\n  //     \"code\":1,\n  //     \"message\":\"接包方浏览任务\",\n  //     \"data\":{\n  //         \"task\":{\n  //             taskId: 0,\n  //             taskName: 'test_task',\n  //             taskType: 0,\n  //             workerNumTotal: 10,\n  //             workerNumLeft: 5,\n  //             taskStartTime: '2022-3-1',\n  //             taskEndTime: '2022-5-3',\n  //             taskState: true,\n  //             taskIntroduction: '这是一个测试任务',\n  //         },\n  //         \"isSelected\":false,\n  //         \"token\":token,\n  //         \"taskId\":taskId\n  //     }\n  // })\n};\nexport const employerTaskDetail = payload => {\n  const {\n    token,\n    taskId\n  } = payload;\n  return axios.get(`${SQUARE_MODULE}/employerTaskDetail/${taskId}?token=${token}`).then(res => {\n    return res.data;\n  }); // return Promise.resolve({\n  //     \"code\":1,\n  //     \"msg\":\"发包方浏览任务\",\n  //     \"data\":{\n  //         \"token\":token,\n  //         \"task\":{\n  //             taskId: taskId,\n  //             taskName: 'test_task',\n  //             taskType: 0,\n  //             workerNumTotal: 10,\n  //             workerNumLeft: 5,\n  //             taskStartTime: '2022-3-1',\n  //             taskEndTime: '2022-5-3',\n  //             taskState: true,\n  //             taskIntroduction: '这是一个测试任务',\n  //         }\n  //     }\n  // })\n};\nexport const publishReport = payload => {\n  const {\n    testReport,\n    token,\n    taskId\n  } = payload;\n  return axios.post(`${EMPLOYEE_MODULE}/uploadTestReport`, {\n    testReport,\n    token,\n    taskId\n  }).then(res => {\n    return res.data;\n  });\n};","map":{"version":3,"sources":["/home/lyk/Projects/Volatile/frontend-volatile/src/api/usercenter.js"],"names":["SQUARE_MODULE","EMPLOYEE_MODULE","EMPLOYER_MODULE","axios","employeeBrowserUndertakingTasks","payload","token","get","then","res","data","employeeBrowserFinishedTasks","employerBrowserUndertakingTasks","employerBrowserFinishedTasks","employeeTaskDetail","taskId","employerTaskDetail","publishReport","testReport","post"],"mappings":"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","sourcesContent":["import {SQUARE_MODULE} from \"@/api/_prefix\";\nimport {EMPLOYEE_MODULE} from \"@/api/_prefix\";\nimport {EMPLOYER_MODULE} from \"@/api/_prefix\";\nimport axios from \"axios\";\n\n/**\n * 接包方浏览正在执行的任务 GET /api/employee/browserUndertakingTasks\n  * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\n */\nexport const employeeBrowserUndertakingTasks = payload => {\n    const {token} = payload;\n    return axios.get(`${EMPLOYEE_MODULE}/browserUndertakingTasks?token=${token}`)\n        .then(res => {\n            return res.data\n        })\n\n\n}\n\n/**\n * 接包方浏览已经完成的任务 GET /api/employee/browserFinishedTasks\n * @returns {Promise<{msg: string, code: number, data: {finishedTaskList: [{taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\n */\n export const employeeBrowserFinishedTasks = payload => {\n    const {token} = payload;\n    return axios.get(`${EMPLOYEE_MODULE}/browserFinishedTasks?token=${token}`)\n        .then(res => {\n            return res.data\n        })\n\n}\n    \n/**\n * 发包方浏览正在执行的任务 GET /api/employer/browserUndertakingTasks\n  * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\n */\n export const employerBrowserUndertakingTasks = payload => {\n    const {token} = payload;\n    return axios.get(`${EMPLOYER_MODULE}/browserUndertakingTasks?token=${token}`)\n        .then(res => {\n            return res.data\n        })\n// return Promise.resolve({\n//         \"code\":1,\n//         \"msg\":\"获取数据成功\",\n//         \"data\":{\n//             \"token\":token,\n//             \"taskList\":[\n//                 {taskId: 0,taskName: 'test_task',taskType: 0,workerNumTotal: 10,workerNumLeft: 5,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\n//                 {taskId: 1,taskName: 'test_task333',taskType: 1,workerNumTotal: 20,workerNumLeft: 6,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\n//                 {taskId: 2,taskName: 'test_task5',taskType: 0,workerNumTotal: 20,workerNumLeft: 6,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\n//                 {taskId: 3,taskName: 'test_task363',taskType: 1,workerNumTotal: 20,workerNumLeft: 6,taskStartTime: '2022-3-1',taskEndTime: '2022-5-3'},\n//             ]\n//         }\n//     })\n\n\n}\n\n/**\n * 发包方浏览已经完成的任务 GET /api/employer/browserFinishedTasks \n * @returns {Promise<{msg: string, code: number, data: {finishedTaskList: [{workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\n */\n export const employerBrowserFinishedTasks = payload => {\n    const {token} = payload;\n    return axios.get(`${EMPLOYER_MODULE}/browserFinishedTasks?token=${token}`)\n        .then(res => {\n            return res.data\n        })\n\n}\n\n\n/**\n * 发包方浏览大厅中的具体任务 GET /square/employeeTaskDetail\n * @param payload\n * @returns {Promise<{code: number, data: {task: {workerNumLeft: number, taskType: number, taskState: boolean, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string, taskIntroduction: string}, isSelected: boolean}, message: string}>}\n */\nexport const employeeTaskDetail = payload =>{\n    const {token,taskId} = payload ;\n    return axios.get(`${SQUARE_MODULE}/employeeTaskDetail/${taskId}?token=${token}`)\n        .then(res =>{\n            return res.data\n        })\n    // return Promise.resolve({\n    //     \"code\":1,\n    //     \"message\":\"接包方浏览任务\",\n    //     \"data\":{\n    //         \"task\":{\n    //             taskId: 0,\n    //             taskName: 'test_task',\n    //             taskType: 0,\n    //             workerNumTotal: 10,\n    //             workerNumLeft: 5,\n    //             taskStartTime: '2022-3-1',\n    //             taskEndTime: '2022-5-3',\n    //             taskState: true,\n    //             taskIntroduction: '这是一个测试任务',\n    //         },\n    //         \"isSelected\":false,\n    //         \"token\":token,\n    //         \"taskId\":taskId\n    //     }\n    // })\n}\n\nexport const employerTaskDetail = payload => {\n    const {token,taskId} = payload;\n    return axios.get(`${SQUARE_MODULE}/employerTaskDetail/${taskId}?token=${token}`)\n        .then(res => {\n            return res.data\n        })\n    // return Promise.resolve({\n    //     \"code\":1,\n    //     \"msg\":\"发包方浏览任务\",\n    //     \"data\":{\n    //         \"token\":token,\n    //         \"task\":{\n    //             taskId: taskId,\n    //             taskName: 'test_task',\n    //             taskType: 0,\n    //             workerNumTotal: 10,\n    //             workerNumLeft: 5,\n    //             taskStartTime: '2022-3-1',\n    //             taskEndTime: '2022-5-3',\n    //             taskState: true,\n    //             taskIntroduction: '这是一个测试任务',\n    //         }\n    //     }\n    // })\n\n}\n\nexport const publishReport=payload=>{\n    const {testReport,token,taskId}=payload\n    return axios.post(`${EMPLOYEE_MODULE}/uploadTestReport`,{testReport,token,taskId})\n        .then(res=>{\n            return res.data\n        })\n}"]},"metadata":{},"sourceType":"module"}