{"ast":null,"code":"import { SQUARE_MODULE } from \"@/api/_prefix\";\nimport axios from \"axios\";\n/**\r\n * 接包方浏览正在执行的任务 GET /api/employee/browserUndertakingTasks\r\n  * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\n\nexport const employeeBrowserUndertakingTasks = payload => {\n  const {\n    token\n  } = payload;\n  return axios.get(`/api/employee/browserUndertakingTasks?token=${token}`).then(res => {\n    return res.data;\n  });\n};\n/**\r\n * 接包方浏览已经完成的任务 GET /api/employee/browserFinishedTasks\r\n * @returns {Promise<{msg: string, code: number, data: {finishedTaskList: [{taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\n\nexport const employeeBrowserFinishedTasks = payload => {\n  const {\n    token\n  } = payload;\n  return axios.get(`/api/employee/browserFinishedTasks?token=${token}`).then(res => {\n    return res.data;\n  });\n};\n/**\r\n * 发包方浏览正在执行的任务 GET /api/employer/browserUndertakingTasks\r\n  * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\n\nexport const employerBrowserUndertakingTasks = payload => {\n  const {\n    token\n  } = payload;\n  return axios.get(`/api/employer/browserUndertakingTasks?token=${token}`).then(res => {\n    return res.data;\n  });\n};\n/**\r\n * 发包方浏览已经完成的任务 GET /api/employer/browserFinishedTasks \r\n * @returns {Promise<{msg: string, code: number, data: {finishedTaskList: [{workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\n\nexport const employerBrowserFinishedTasks = payload => {\n  const {\n    token\n  } = payload;\n  return axios.get(`/api/employer/browserFinishedTasks ?token=${token}`).then(res => {\n    return res.data;\n  });\n};\n/**\r\n * 发包方浏览大厅中的具体任务 GET /square/employeeTaskDetail\r\n * @param payload\r\n * @returns {Promise<{code: number, data: {task: {workerNumLeft: number, taskType: number, taskState: boolean, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string, taskIntroduction: string}, isSelected: boolean}, message: string}>}\r\n */\n\nexport const employeeTaskDetail = payload => {\n  const {\n    token,\n    taskId\n  } = payload;\n  return axios.get(`${SQUARE_MODULE}/employeeTaskDetail/${taskId}?token=${token}`).then(res => {\n    return res.data;\n  }); // return Promise.resolve({\n  //     \"code\":1,\n  //     \"message\":\"接包方浏览任务\",\n  //     \"data\":{\n  //         \"task\":{\n  //             taskId: 0,\n  //             taskName: 'test_task',\n  //             taskType: 0,\n  //             workerNumTotal: 10,\n  //             workerNumLeft: 5,\n  //             taskStartTime: '2022-3-1',\n  //             taskEndTime: '2022-5-3',\n  //             taskState: true,\n  //             taskIntroduction: '这是一个测试任务',\n  //         },\n  //         \"isSelected\":false,\n  //         \"token\":token,\n  //         \"taskId\":taskId\n  //     }\n  // })\n};\nexport const employerTaskDetail = payload => {\n  const {\n    token,\n    taskId\n  } = payload;\n  return axios.get(`${SQUARE_MODULE}/employerTaskDetail/${taskId}?token=${token}`).then(res => {\n    return res.data;\n  }); // return Promise.resolve({\n  //     \"code\":1,\n  //     \"msg\":\"发包方浏览任务\",\n  //     \"data\":{\n  //         \"token\":token,\n  //         \"task\":{\n  //             taskId: taskId,\n  //             taskName: 'test_task',\n  //             taskType: 0,\n  //             workerNumTotal: 10,\n  //             workerNumLeft: 5,\n  //             taskStartTime: '2022-3-1',\n  //             taskEndTime: '2022-5-3',\n  //             taskState: true,\n  //             taskIntroduction: '这是一个测试任务',\n  //         }\n  //     }\n  // })\n};\nexport const publishReport = payload => {\n  const {\n    testReport,\n    token,\n    taskId\n  } = payload;\n  return axios.post(`/api/employee/uploadTestReport`, {\n    testReport,\n    token,\n    taskId\n  }).then(res => {\n    return res.data;\n  });\n};","map":{"version":3,"sources":["D:/download/大三/大三下/1 软工三/project/第一阶段/frontend/frontend-volatile/src/api/usercenter.js"],"names":["SQUARE_MODULE","axios","employeeBrowserUndertakingTasks","payload","token","get","then","res","data","employeeBrowserFinishedTasks","employerBrowserUndertakingTasks","employerBrowserFinishedTasks","employeeTaskDetail","taskId","employerTaskDetail","publishReport","testReport","post"],"mappings":"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","sourcesContent":["import {SQUARE_MODULE} from \"@/api/_prefix\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * 接包方浏览正在执行的任务 GET /api/employee/browserUndertakingTasks\r\n  * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\r\nexport const employeeBrowserUndertakingTasks = payload => {\r\n    const {token} = payload;\r\n    return axios.get(`/api/employee/browserUndertakingTasks?token=${token}`)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n\r\n}\r\n\r\n/**\r\n * 接包方浏览已经完成的任务 GET /api/employee/browserFinishedTasks\r\n * @returns {Promise<{msg: string, code: number, data: {finishedTaskList: [{taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\r\n export const employeeBrowserFinishedTasks = payload => {\r\n    const {token} = payload;\r\n    return axios.get(`/api/employee/browserFinishedTasks?token=${token}`)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n\r\n}\r\n    \r\n/**\r\n * 发包方浏览正在执行的任务 GET /api/employer/browserUndertakingTasks\r\n  * @returns {Promise<{msg: string, code: number, data: {taskList: [{workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumLeft: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\r\n export const employerBrowserUndertakingTasks = payload => {\r\n    const {token} = payload;\r\n    return axios.get(`/api/employer/browserUndertakingTasks?token=${token}`)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n\r\n}\r\n\r\n/**\r\n * 发包方浏览已经完成的任务 GET /api/employer/browserFinishedTasks \r\n * @returns {Promise<{msg: string, code: number, data: {finishedTaskList: [{workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}, {workerNumTotal: number, taskType: number, taskName: string, taskId: number, taskStartTime: string, taskEndTime: string}]}}>}\r\n */\r\n export const employerBrowserFinishedTasks = payload => {\r\n    const {token} = payload;\r\n    return axios.get(`/api/employer/browserFinishedTasks ?token=${token}`)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n\r\n}\r\n\r\n\r\n/**\r\n * 发包方浏览大厅中的具体任务 GET /square/employeeTaskDetail\r\n * @param payload\r\n * @returns {Promise<{code: number, data: {task: {workerNumLeft: number, taskType: number, taskState: boolean, taskName: string, workerNumTotal: number, taskId: number, taskStartTime: string, taskEndTime: string, taskIntroduction: string}, isSelected: boolean}, message: string}>}\r\n */\r\nexport const employeeTaskDetail = payload =>{\r\n    const {token,taskId} = payload ;\r\n    return axios.get(`${SQUARE_MODULE}/employeeTaskDetail/${taskId}?token=${token}`)\r\n        .then(res =>{\r\n            return res.data\r\n        })\r\n    // return Promise.resolve({\r\n    //     \"code\":1,\r\n    //     \"message\":\"接包方浏览任务\",\r\n    //     \"data\":{\r\n    //         \"task\":{\r\n    //             taskId: 0,\r\n    //             taskName: 'test_task',\r\n    //             taskType: 0,\r\n    //             workerNumTotal: 10,\r\n    //             workerNumLeft: 5,\r\n    //             taskStartTime: '2022-3-1',\r\n    //             taskEndTime: '2022-5-3',\r\n    //             taskState: true,\r\n    //             taskIntroduction: '这是一个测试任务',\r\n    //         },\r\n    //         \"isSelected\":false,\r\n    //         \"token\":token,\r\n    //         \"taskId\":taskId\r\n    //     }\r\n    // })\r\n}\r\n\r\nexport const employerTaskDetail = payload => {\r\n    const {token,taskId} = payload;\r\n    return axios.get(`${SQUARE_MODULE}/employerTaskDetail/${taskId}?token=${token}`)\r\n        .then(res => {\r\n            return res.data\r\n        })\r\n    // return Promise.resolve({\r\n    //     \"code\":1,\r\n    //     \"msg\":\"发包方浏览任务\",\r\n    //     \"data\":{\r\n    //         \"token\":token,\r\n    //         \"task\":{\r\n    //             taskId: taskId,\r\n    //             taskName: 'test_task',\r\n    //             taskType: 0,\r\n    //             workerNumTotal: 10,\r\n    //             workerNumLeft: 5,\r\n    //             taskStartTime: '2022-3-1',\r\n    //             taskEndTime: '2022-5-3',\r\n    //             taskState: true,\r\n    //             taskIntroduction: '这是一个测试任务',\r\n    //         }\r\n    //     }\r\n    // })\r\n\r\n}\r\n\r\nexport const publishReport=payload=>{\r\n    const {testReport,token,taskId}=payload\r\n    return axios.post(`/api/employee/uploadTestReport`,{testReport,token,taskId})\r\n        .then(res=>{\r\n            return res.data\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}