{"ast":null,"code":"import { publishTask } from \"@/api/task\";\nimport { reactive } from \"vue\";\nconst task_form = reactive({\n  taskName: '',\n  taskIntroduction: '',\n  taskStartTime: '',\n  taskEndTime: '',\n  workerNumTotal: 1,\n  taskType: '',\n  executableFileList: [],\n  requirementDescriptionFileList: []\n});\nconst rules = reactive({\n  taskName: [{\n    required: true,\n    message: '请输入任务名称',\n    trigger: 'blur'\n  }, {\n    min: 3,\n    max: 8,\n    message: '任务名称不少于3个字符，不多于8个字符',\n    trigger: 'blur'\n  }],\n  taskIntroduction: [{\n    required: true,\n    message: '请输入任务简介',\n    trigger: 'blur'\n  }, {\n    min: 5,\n    max: 40,\n    massage: '任务简介不少于5个字符，不多于40个字符',\n    trigger: 'blur'\n  }],\n  taskStartTime: [{\n    type: 'date',\n    required: true,\n    message: '请选择任务开始时间，注意不要早于当前时间',\n    trigger: 'change'\n  }],\n  taskEndTime: [{\n    type: 'date',\n    required: true,\n    message: '请选择任务结束时间',\n    trigger: 'change'\n  }],\n  taskType: [{\n    required: true,\n    message: '请选择测试类型',\n    trigger: 'change'\n  }]\n});\n\nconst handleUploadSuccess1 = (response, file) => {\n  let fileUrl = response.data.url;\n  let fileName = file.name;\n  task_form.executableFileList.push({\n    fileName: fileName,\n    fileURL: fileUrl\n  });\n};\n\nconst handleUploadSuccess2 = (response, file) => {\n  let fileUrl = response.data.url;\n  let fileName = file.name;\n  task_form.requirementDescriptionFileList.push({\n    fileName: fileName,\n    fileURL: fileUrl\n  });\n};\n\nexport default {\n  name: \"TaskRelease\",\n\n  data() {\n    return {\n      task_form,\n      rules,\n      taskTypes: [{\n        value: '0',\n        label: '功能测试'\n      }, {\n        value: '1',\n        label: '性能测试'\n      }],\n      userToken: window.localStorage.getItem(\"userToken\")\n    };\n  },\n\n  components: {},\n  methods: {\n    handleUploadSuccess1,\n    handleUploadSuccess2,\n\n    handleSubmit() {\n      window.localStorage.setItem(\"userToken\", \"testToken\");\n      const task = {\n        \"requirementDescriptionFileList\": this.task_form.requirementDescriptionFileList,\n        \"executableFileList\": this.task_form.executableFileList,\n        \"taskIntroduction\": this.task_form.taskIntroduction,\n        \"taskStartTime\": this.task_form.taskStartTime,\n        \"taskEndTime\": this.task_form.taskEndTime,\n        \"taskType\": this.task_form.taskType,\n        \"taskName\": this.task_form.taskName\n      };\n      publishTask({\n        token: this.userToken,\n        task: task\n      }).then(res => {\n        if (res.code === 1) {\n          console.log(res.msg);\n          console.log(res.data);\n          this.$router.push(\"/taskEnrollSucceed\");\n        } else {\n          console.log(res.msg);\n        }\n      });\n    },\n\n    goBack() {\n      this.$router.back(-1);\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["publishTask","reactive","task_form","taskName","taskIntroduction","taskStartTime","taskEndTime","workerNumTotal","taskType","executableFileList","requirementDescriptionFileList","rules","required","message","trigger","min","max","massage","type","handleUploadSuccess1","response","file","fileUrl","data","url","fileName","name","push","fileURL","handleUploadSuccess2","taskTypes","value","label","userToken","window","localStorage","getItem","components","methods","handleSubmit","setItem","task","token","then","res","code","console","log","msg","$router","goBack","back"],"sourceRoot":"","sources":["/home/lyk/Projects/Volatile/frontend-volatile/src/views/task/TaskRelease.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  <el-card class=\"box_card\">\n    <template #header>\n      <div class=\"card_header\">\n        <span style=\"font-weight: bolder\">任务信息提交</span>\n      </div>\n    </template>\n    <div class=\"input_container\">\n      <el-form :model=\"task_form\" label-width=\"120px\" label-position=\"right\" :rules=\"rules\" >\n        <el-form-item label=\"任务名称\" prop=\"taskName\">\n          <el-input v-model=\"task_form.taskName\" ></el-input>\n        </el-form-item>\n        <el-form-item label=\"任务简介\" prop=\"taskIntroduction\">\n          <el-input v-model=\"task_form.taskIntroduction\" :rows=\"3\" type=\"textarea\" ></el-input>\n        </el-form-item>\n        <el-form-item label=\"测试时间段\" required>\n          <el-col :span=\"11\">\n            <el-form-item prop=\"taskStartTime\">\n              <el-date-picker\n                v-model=\"task_form.taskStartTime\"\n                type=\"date\"\n                style=\"width:100%\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"2\" style=\"display: flex;text-align: center;justify-content: center\">\n            <span >-</span>\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item prop=\"taskEndTime\">\n              <el-date-picker\n                v-model=\"task_form.taskEndTime\"\n                type=\"date\"\n                style=\"width: 100%\">\n              </el-date-picker>\n            </el-form-item>\n          </el-col>\n        </el-form-item>\n        <el-form-item style=\"margin-left: -120px\">\n          <el-col :span=\"11\">\n            <el-form-item label=\"工人数量\"  required>\n              <el-input-number v-model=\"task_form.workerNumTotal\" :min=\"1\" :max=\"20\" :step=\"1\" style=\"width: 200px\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"11\">\n            <el-form-item label=\"测试类型\" required prop=\"taskType\">\n              <el-select v-model=\"task_form.taskType\" >\n                <el-option\n                  v-for=\"item in taskTypes\"\n                  :key=\"item.value\"\n                  :label=\"item.label\"\n                  :value=\"item.value\">\n                </el-option>\n              </el-select>\n            </el-form-item>\n          </el-col>\n        </el-form-item>\n        <el-form-item label=\"附件\"  >\n          <div style=\"display: flex;flex-direction: column\">\n            <el-upload\n              action=\"\"\n              show-file-list\n              accept=\".exe,.apk,.jar\"\n              :limit=\"1\"\n              :on-success=\"handleUploadSuccess1\"\n              >\n              <el-button type=\"primary\" plain>点击上传待测应用可执行文件</el-button>\n              <template #tip>\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\n                请上传.exe,.apk,.jar类型的文件\n                </div>\n              </template>\n            </el-upload>\n            <el-upload\n                action=\"\"\n                :limit=\"1\"\n                show-file-list\n                accept=\".md,.doc,.pdf,.docx\"\n                :on-success=\"handleUploadSuccess2\"\n                >\n              <el-button type=\"primary\" plain >点击上传测试需求描述文件</el-button>\n              <template #tip>\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\n                  请上传.doc,.md,.pdf,.docx类型的文件\n                </div>\n              </template>\n            </el-upload>\n          </div>\n        </el-form-item>\n        <el-form-item style=\"margin-left: 340px\">\n          <el-button type=\"primary\" @click=\"handleSubmit\">提交任务</el-button>\n          <el-button @click=\"goBack\">取消</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </el-card>\n  </div>\n</template>\n\n<script >\nimport {publishTask} from \"@/api/task\";\nimport {reactive} from \"vue\";\nconst task_form = reactive({\n  taskName: '',\n  taskIntroduction: '',\n  taskStartTime: '',\n  taskEndTime: '',\n  workerNumTotal: 1,\n  taskType: '',\n  executableFileList:[],\n  requirementDescriptionFileList:[]\n})\nconst rules = reactive({\n  taskName: [\n    {\n      required: true,\n      message: '请输入任务名称',\n      trigger: 'blur'\n    },\n    {\n      min: 3,\n      max: 8,\n      message: '任务名称不少于3个字符，不多于8个字符',\n      trigger: 'blur'\n    }\n  ],\n  taskIntroduction:[\n    {\n      required: true,\n      message: '请输入任务简介',\n      trigger: 'blur'\n    },\n    {\n      min: 5,\n      max: 40,\n      massage: '任务简介不少于5个字符，不多于40个字符',\n      trigger: 'blur'\n    }\n  ],\n  taskStartTime:[\n    {\n      type: 'date',\n      required: true,\n      message: '请选择任务开始时间，注意不要早于当前时间',\n      trigger: 'change'\n    }\n  ],\n  taskEndTime:[\n    {\n      type: 'date',\n      required: true,\n      message: '请选择任务结束时间',\n      trigger: 'change'\n    }\n  ],\n  taskType: [\n    {\n      required: true,\n      message: '请选择测试类型',\n      trigger: 'change'\n    }\n  ]\n})\n\nconst handleUploadSuccess1 = (response,file) => {\n  let fileUrl = response.data.url;\n  let fileName = file.name\n  task_form.executableFileList.push({fileName:fileName,fileURL:fileUrl})\n}\n\nconst handleUploadSuccess2 = (response,file) => {\n  let fileUrl = response.data.url;\n  let fileName = file.name\n  task_form.requirementDescriptionFileList.push({fileName:fileName,fileURL:fileUrl})\n}\n\nexport default {\n  name: \"TaskRelease\",\n  data() {\n    return {\n      task_form,\n      rules,\n      taskTypes:[\n        {\n          value:'0',\n          label: '功能测试'\n        },\n        {\n          value: '1',\n          label: '性能测试',\n        }\n      ],\n      userToken:  window.localStorage.getItem(\"userToken\"),\n    }\n  },\n  components:{\n\n  },\n  methods: {\n    handleUploadSuccess1,\n    handleUploadSuccess2,\n    handleSubmit()\n    {\n      window.localStorage.setItem(\"userToken\",\"testToken\")\n      const task = {\n          \"requirementDescriptionFileList\": this.task_form.requirementDescriptionFileList,\n          \"executableFileList\": this.task_form.executableFileList,\n          \"taskIntroduction\":this.task_form.taskIntroduction,\n          \"taskStartTime\":this.task_form.taskStartTime,\n          \"taskEndTime\":this.task_form.taskEndTime,\n          \"taskType\":this.task_form.taskType,\n          \"taskName\":this.task_form.taskName,\n        }\n      publishTask({token:this.userToken,task:task})\n      .then(res =>{\n        if(res.code === 1) {\n          console.log(res.msg)\n          console.log(res.data)\n          this.$router.push(\"/taskEnrollSucceed\")\n        }\n        else {console.log(res.msg)}\n      })\n    },\n    goBack(){\n      this.$router.back(-1)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container{\n  display: flex;\n  text-align: center;\n  justify-content: center;\n}\n.box_card{\n  width: 80%;\n  margin-top: 20px;\n}\n.card_header{\n  text-align: left;\n}\n.input_container{\n  display: flex;\n  flex-direction: column;\n  text-align: left;\n}\n</style>"]},"metadata":{},"sourceType":"module"}