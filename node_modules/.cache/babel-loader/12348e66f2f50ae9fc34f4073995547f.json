{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-13a6a532\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card_header\"\n}, [/*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"font-weight\": \"bolder\"\n  }\n}, \"任务信息提交\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = {\n  class: \"input_container\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"-\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"column\"\n  }\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"点击上传待测应用可执行文件\");\n\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"color\": \"#9A9A9A\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"5px\"\n  }\n}, \" 请上传.exe,.apk,.jar类型的文件 \", -1\n/* HOISTED */\n));\n\nconst _hoisted_8 = /*#__PURE__*/_createTextVNode(\"点击上传测试需求描述文件\");\n\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"color\": \"#9A9A9A\",\n    \"font-size\": \"small\",\n    \"margin-left\": \"5px\"\n  }\n}, \" 请上传.doc,.md,.pdf,.docx类型的文件 \", -1\n/* HOISTED */\n));\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"提交任务\");\n\nconst _hoisted_11 = /*#__PURE__*/_createTextVNode(\"取消\");\n\nexport function render(_ctx, _cache) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n\n  const _component_el_col = _resolveComponent(\"el-col\");\n\n  const _component_el_input_number = _resolveComponent(\"el-input-number\");\n\n  const _component_el_option = _resolveComponent(\"el-option\");\n\n  const _component_el_select = _resolveComponent(\"el-select\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_upload = _resolveComponent(\"el-upload\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"box_card\"\n  }, {\n    header: _withCtx(() => [_hoisted_2]),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_form, {\n      model: _ctx.task_form,\n      \"label-width\": \"120px\",\n      \"label-position\": \"right\",\n      rules: _ctx.rules\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"任务名称\",\n        prop: \"taskName\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.task_form.taskName,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.task_form.taskName = $event)\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"任务简介\",\n        prop: \"taskIntroduction\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: _ctx.task_form.taskIntroduction,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.task_form.taskIntroduction = $event),\n          rows: 3,\n          type: \"textarea\"\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"测试时间段\",\n        required: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 11\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            prop: \"taskStartTime\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n              modelValue: _ctx.task_form.taskStartTime,\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.task_form.taskStartTime = $event),\n              type: \"date\",\n              style: {\n                \"width\": \"100%\"\n              }\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_col, {\n          span: 2,\n          style: {\n            \"display\": \"flex\",\n            \"text-align\": \"center\",\n            \"justify-content\": \"center\"\n          }\n        }, {\n          default: _withCtx(() => [_hoisted_4]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_col, {\n          span: 11\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            prop: \"taskEndTime\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n              modelValue: _ctx.task_form.taskEndTime,\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => _ctx.task_form.taskEndTime = $event),\n              type: \"date\",\n              style: {\n                \"width\": \"100%\"\n              }\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        style: {\n          \"margin-left\": \"-120px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_col, {\n          span: 11\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"工人数量\",\n            required: \"\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_input_number, {\n              modelValue: _ctx.task_form.workerNumTotal,\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.task_form.workerNumTotal = $event),\n              min: 1,\n              max: 20,\n              step: 1,\n              style: {\n                \"width\": \"200px\"\n              }\n            }, null, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }), _createVNode(_component_el_col, {\n          span: 11\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_form_item, {\n            label: \"测试类型\",\n            required: \"\",\n            prop: \"taskType\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_el_select, {\n              modelValue: _ctx.task_form.taskType,\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => _ctx.task_form.taskType = $event)\n            }, {\n              default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.taskTypes, item => {\n                return _openBlock(), _createBlock(_component_el_option, {\n                  key: item.value,\n                  label: item.label,\n                  value: item.value\n                }, null, 8\n                /* PROPS */\n                , [\"label\", \"value\"]);\n              }), 128\n              /* KEYED_FRAGMENT */\n              ))]),\n              _: 1\n              /* STABLE */\n\n            }, 8\n            /* PROPS */\n            , [\"modelValue\"])]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        label: \"附件\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_el_upload, {\n          action: \"\",\n          \"show-file-list\": \"\",\n          accept: \".exe,.apk,.jar\",\n          limit: 1,\n          \"auto-upload\": true,\n          \"http-request\": _ctx.fnUploadRequest,\n          \"on-success\": _ctx.handleUploadSuccess1\n        }, {\n          tip: _withCtx(() => [_hoisted_7]),\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\"\n          }, {\n            default: _withCtx(() => [_hoisted_6]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"http-request\", \"on-success\"]), _createVNode(_component_el_upload, {\n          action: \"\",\n          limit: 1,\n          \"show-file-list\": \"\",\n          accept: \".md,.doc,.pdf,.docx\",\n          \"on-success\": _ctx.handleUploadSuccess2\n        }, {\n          tip: _withCtx(() => [_hoisted_9]),\n          default: _withCtx(() => [_createVNode(_component_el_button, {\n            type: \"primary\",\n            plain: \"\"\n          }, {\n            default: _withCtx(() => [_hoisted_8]),\n            _: 1\n            /* STABLE */\n\n          })]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"on-success\"])])]),\n        _: 1\n        /* STABLE */\n\n      }), _createVNode(_component_el_form_item, {\n        style: {\n          \"margin-left\": \"340px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: _ctx.handleSubmit\n        }, {\n          default: _withCtx(() => [_hoisted_10]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"]), _createVNode(_component_el_button, {\n          onClick: _ctx.goBack\n        }, {\n          default: _withCtx(() => [_hoisted_11]),\n          _: 1\n          /* STABLE */\n\n        }, 8\n        /* PROPS */\n        , [\"onClick\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\", \"rules\"])])]),\n    _: 1\n    /* STABLE */\n\n  })]);\n}","map":{"version":3,"mappings":"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","names":["class","_createElementVNode","style","_createElementBlock","_createVNode","_component_el_card","header","_hoisted_2","_component_el_form","model","_ctx","rules","_component_el_form_item","label","prop","_component_el_input","taskName","$event","taskIntroduction","rows","type","required","_component_el_col","span","_component_el_date_picker","taskStartTime","_hoisted_4","taskEndTime","_component_el_input_number","workerNumTotal","min","max","step","_component_el_select","taskType","_Fragment","_renderList","item","_createBlock","_component_el_option","key","value","_component_el_upload","action","accept","limit","tip","_hoisted_7","_component_el_button","plain","_hoisted_9","onClick"],"sourceRoot":"","sources":["D:\\download\\大三\\大三下\\1 软工三\\project\\第一阶段\\frontend\\frontend-volatile\\src\\views\\task\\TaskRelease.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n  <el-card class=\"box_card\">\r\n    <template #header>\r\n      <div class=\"card_header\">\r\n        <span style=\"font-weight: bolder\">任务信息提交</span>\r\n      </div>\r\n    </template>\r\n    <div class=\"input_container\">\r\n      <el-form :model=\"task_form\" label-width=\"120px\" label-position=\"right\" :rules=\"rules\" >\r\n        <el-form-item label=\"任务名称\" prop=\"taskName\">\r\n          <el-input v-model=\"task_form.taskName\" ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"任务简介\" prop=\"taskIntroduction\">\r\n          <el-input v-model=\"task_form.taskIntroduction\" :rows=\"3\" type=\"textarea\" ></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"测试时间段\" required>\r\n          <el-col :span=\"11\">\r\n            <el-form-item prop=\"taskStartTime\">\r\n              <el-date-picker\r\n                v-model=\"task_form.taskStartTime\"\r\n                type=\"date\"\r\n                style=\"width:100%\">\r\n              </el-date-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"2\" style=\"display: flex;text-align: center;justify-content: center\">\r\n            <span >-</span>\r\n          </el-col>\r\n          <el-col :span=\"11\">\r\n            <el-form-item prop=\"taskEndTime\">\r\n              <el-date-picker\r\n                v-model=\"task_form.taskEndTime\"\r\n                type=\"date\"\r\n                style=\"width: 100%\">\r\n              </el-date-picker>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item style=\"margin-left: -120px\">\r\n          <el-col :span=\"11\">\r\n            <el-form-item label=\"工人数量\"  required>\r\n              <el-input-number v-model=\"task_form.workerNumTotal\" :min=\"1\" :max=\"20\" :step=\"1\" style=\"width: 200px\" />\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col :span=\"11\">\r\n            <el-form-item label=\"测试类型\" required prop=\"taskType\">\r\n              <el-select v-model=\"task_form.taskType\" >\r\n                <el-option\r\n                  v-for=\"item in taskTypes\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-form-item>\r\n        <el-form-item label=\"附件\"  >\r\n          <div style=\"display: flex;flex-direction: column\">\r\n            <el-upload\r\n              action=\"\"\r\n              show-file-list\r\n              accept=\".exe,.apk,.jar\"\r\n              :limit=\"1\"\r\n              :auto-upload=\"true\"\r\n              :http-request=\"fnUploadRequest\"\r\n              :on-success=\"handleUploadSuccess1\"\r\n              >\r\n              <el-button type=\"primary\" plain>点击上传待测应用可执行文件</el-button>\r\n              <template #tip>\r\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\r\n                请上传.exe,.apk,.jar类型的文件\r\n                </div>\r\n              </template>\r\n            </el-upload>\r\n            <el-upload\r\n                action=\"\"\r\n                :limit=\"1\"\r\n                show-file-list\r\n                accept=\".md,.doc,.pdf,.docx\"\r\n                :on-success=\"handleUploadSuccess2\"\r\n                >\r\n              <el-button type=\"primary\" plain >点击上传测试需求描述文件</el-button>\r\n              <template #tip>\r\n                <div style=\"color:#9A9A9A;font-size: small;margin-left: 5px\">\r\n                  请上传.doc,.md,.pdf,.docx类型的文件\r\n                </div>\r\n              </template>\r\n            </el-upload>\r\n          </div>\r\n        </el-form-item>\r\n        <el-form-item style=\"margin-left: 340px\">\r\n          <el-button type=\"primary\" @click=\"handleSubmit\">提交任务</el-button>\r\n          <el-button @click=\"goBack\">取消</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n  </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script >\r\nimport {publishTask} from \"@/api/task\";\r\nimport {reactive} from \"vue\";\r\nimport oss from \"@/utils/oss\"\r\n\r\nconst task_form = reactive({\r\n  taskName: '',\r\n  taskIntroduction: '',\r\n  taskStartTime: '',\r\n  taskEndTime: '',\r\n  workerNumTotal: 1,\r\n  taskType: '',\r\n  executableFileList:[],\r\n  requirementDescriptionFileList:[]\r\n})\r\nconst rules = reactive({\r\n  taskName: [\r\n    {\r\n      required: true,\r\n      message: '请输入任务名称',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min: 3,\r\n      max: 8,\r\n      message: '任务名称不少于3个字符，不多于8个字符',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  taskIntroduction:[\r\n    {\r\n      required: true,\r\n      message: '请输入任务简介',\r\n      trigger: 'blur'\r\n    },\r\n    {\r\n      min: 5,\r\n      max: 40,\r\n      massage: '任务简介不少于5个字符，不多于40个字符',\r\n      trigger: 'blur'\r\n    }\r\n  ],\r\n  taskStartTime:[\r\n    {\r\n      type: 'date',\r\n      required: true,\r\n      message: '请选择任务开始时间，注意不要早于当前时间',\r\n      trigger: 'change'\r\n    }\r\n  ],\r\n  taskEndTime:[\r\n    {\r\n      type: 'date',\r\n      required: true,\r\n      message: '请选择任务结束时间',\r\n      trigger: 'change'\r\n    }\r\n  ],\r\n  taskType: [\r\n    {\r\n      required: true,\r\n      message: '请选择测试类型',\r\n      trigger: 'change'\r\n    }\r\n  ]\r\n})\r\n\r\n// const handleUploadSuccess1 = (response,file) => {\r\n//\r\n//   let fileUrl = response.data.url;\r\n//   let fileName = file.name\r\n//   task_form.executableFileList.push({fileName:fileName,fileURL:fileUrl})\r\n// }\r\n\r\nconst handleUploadSuccess2 = (response,file) => {\r\n  let fileUrl = response.data.url;\r\n  let fileName = file.name\r\n  task_form.requirementDescriptionFileList.push({fileName:fileName,fileURL:fileUrl})\r\n}\r\n\r\nexport default {\r\n  name: \"TaskRelease\",\r\n  data() {\r\n    return {\r\n      task_form,\r\n      rules,\r\n      taskTypes:[\r\n        {\r\n          value:'0',\r\n          label: '功能测试'\r\n        },\r\n        {\r\n          value: '1',\r\n          label: '性能测试',\r\n        }\r\n      ],\r\n      userToken:  window.localStorage.getItem(\"userToken\"),\r\n      file:{\r\n        fileName:'',\r\n        fileURL:''\r\n      }\r\n    }\r\n  },\r\n  components:{\r\n\r\n  },\r\n  methods: {\r\n    handleUploadSuccess2,\r\n    handleSubmit()\r\n    {\r\n      window.localStorage.setItem(\"userToken\",\"testToken\")\r\n      const task = {\r\n          \"requirementDescriptionFileList\": this.task_form.requirementDescriptionFileList,\r\n          \"executableFileList\": this.task_form.executableFileList,\r\n          \"taskIntroduction\":this.task_form.taskIntroduction,\r\n          \"taskStartTime\":this.task_form.taskStartTime,\r\n          \"taskEndTime\":this.task_form.taskEndTime,\r\n          \"taskType\":this.task_form.taskType,\r\n          \"taskName\":this.task_form.taskName,\r\n        }\r\n      publishTask({token:this.userToken,task:task})\r\n      .then(res =>{\r\n        if(res.code === 1) {\r\n          console.log(res.msg)\r\n          console.log(res.data)\r\n          this.$router.push(\"/taskEnrollSucceed\")\r\n        }\r\n        else {console.log(res.msg)}\r\n      })\r\n    },\r\n    goBack(){\r\n      this.$router.back(-1)\r\n    },\r\n    async fnUploadRequest(option) {\r\n      await oss.ossUploadFile(option).then(res => {\r\n        this.file.fileName = res.fileName;\r\n        this.file.fileURL = res.fileUrl;\r\n      })\r\n    },\r\n    handleUploadSuccess1(){\r\n      task_form.executableFileList.push(this.file)\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n.container{\r\n  display: flex;\r\n  text-align: center;\r\n  justify-content: center;\r\n}\r\n.box_card{\r\n  width: 80%;\r\n  margin-top: 20px;\r\n}\r\n.card_header{\r\n  text-align: left;\r\n}\r\n.input_container{\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: left;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}